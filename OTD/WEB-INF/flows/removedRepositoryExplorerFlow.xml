<?xml version="1.0" encoding="UTF-8"?>
<flow xmlns="http://www.springframework.org/schema/webflow" xmlns:ns0="http://www.w3.org/2001/XMLSchema-instance"
      ns0:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow-2.0.xsd"
      start-state="initEvent">

    <!-- AKCHAN STARTS -->
    <action-state id="initEvent">
        <evaluate expression="ResourceAction"/>
        <transition on="success" to="repoStart"/>
    </action-state>

    <decision-state id="repoStart">
        <if test="requestParameters.method != null" then="${requestParameters.method}" else="repositoryExplorer"/>
    </decision-state>

    <action-state id="getResources">
        <evaluate expression="ResourceAction"/>
        <transition on="success" to="resourceView"/>
    </action-state>

    <action-state id="getResourceProperties">
        <evaluate expression="ResourceAction"/>
        <transition on="success" to="treeView"/>
    </action-state>

    <action-state id="getBreadCrumb">
        <evaluate expression="ResourceAction"/>
        <transition on="success" to="treeView"/>
    </action-state>

    <view-state id="resourceView" view="ajax/RepositoryExplorerAjaxTable">
        <transition on="ViewReport" to="viewReport"/>
    </view-state>

    <view-state id="repositoryExplorer" view="repository/repositoryExplorer">
        <on-entry>
            <set name="flowScope.prevForm" value="'repositoryExplorer'"/>
        </on-entry>
        <transition on="success" to="repositoryExplorer"/>
        <transition on="ViewReport" to="viewReport"/>
        <!--<transition on="ViewOlapModel" to="viewOlapModel"/>-->
        <transition on="ScheduleReport" to="reportJobs"/>
        <transition on="runReportInBackground" to="runReportInBackground"/>
        <transition on="goToPage" to="goToPage"/>
        <!-- Handle back from SubFlows -->
        <transition on="back" to="repositoryExplorer"/>
    </view-state>

    <action-state id="getNode">
        <evaluate expression="RepositoryTreeAction"/>
        <transition on="success" to="treeView"/>
    </action-state>

    <action-state id="getChildren">
        <evaluate expression="RepositoryTreeAction"/>
        <transition on="success" to="treeView"/>
    </action-state>

    <action-state id="createFolder">
        <evaluate expression="ResourceAction"/>
        <transition on="success" to="treeView"/>
        <transition on="error" to="treeView"/>
    </action-state>

    <action-state id="doesFolderExist">
        <evaluate expression="ResourceAction"/>
        <transition on="success" to="treeView"/>
    </action-state>

    <action-state id="deleteFolder">
        <evaluate expression="ResourceAction"/>
        <transition on="success" to="treeView"/>
    </action-state>

    <action-state id="deleteResources">
        <evaluate expression="ResourceAction"/>
        <transition on="success" to="treeView"/>
    </action-state>

    <action-state id="updateResourceProperties">
        <evaluate expression="ResourceAction"/>
        <transition on="success" to="treeView"/>
    </action-state>

    <action-state id="getNewFolderName">
        <evaluate expression="ResourceAction"/>
        <transition on="success" to="treeView"/>
    </action-state>

    <action-state id="copyFolder">
        <evaluate expression="ResourceAction"/>
        <transition on="success" to="treeView"/>
        <transition on="no" to="treeView"/>
    </action-state>

    <action-state id="moveFolder">
        <evaluate expression="ResourceAction"/>
        <transition on="success" to="treeView"/>
        <transition on="no" to="treeView"/>
    </action-state>

    <action-state id="copyResource">
        <evaluate expression="ResourceAction"/>
        <transition on="success" to="treeView"/>
        <transition on="no" to="treeView"/>
    </action-state>

    <action-state id="moveResource">
        <evaluate expression="ResourceAction"/>
        <transition on="success" to="treeView"/>
        <transition on="no" to="treeView"/>
    </action-state>

    <action-state id="getUriDisplayLabelList">
        <evaluate expression="ResourceAction"/>
        <transition on="success" to="treeView"/>
    </action-state>

    <action-state id="getConfirmationOption">
        <evaluate expression="ResourceAction"/>
        <transition on="success" to="treeView"/>
    </action-state>

    <view-state id="treeView" view="ajax/ajaxresponse"/>

    <!-- AKCHAN ENDS -->
    <action-state id="initAction">
        <evaluate expression="repositoryAction"/>
        <transition on="success" to="defaultView"/>
    </action-state>

    <view-state id="defaultView" view="modules/repository/defaultView">
        <on-entry>
            <set name="flowScope.prevForm" value="'defaultView'"/>
        </on-entry>
        <transition on="success" to="defaultView"/>
        <transition on="ViewReport" to="viewReport"/>
        <!--<transition on="ViewOlapModel" to="viewOlapModel"/>-->
        <transition on="ScheduleReport" to="reportJobs"/>
        <transition on="runReportInBackground" to="runReportInBackground"/>
        <transition on="goToPage" to="goToPage"/>
        <!-- Handle back from SubFlows -->
        <transition on="back" to="initAction"/>
    </view-state>

    <action-state id="goToPage">
        <evaluate expression="repositoryAction"/>
        <transition on="success" to="initAction"/>
    </action-state>

    <subflow-state id="viewReport" subflow="viewReportFlow">
        <input name="reportUnit" value="requestParameters.resource"/>
        <input name="inhibitRequestParsing" value="true"/>
        <transition on="done" to="initAction"/>
        <transition on="cancel" to="initAction"/>
    </subflow-state>

    <!--
        <subflow-state id="viewOlapModel" flow="viewOlapModelFlow">
            <attribute-mapper>
                <input-mapping as="name" value="${requestParameters.resource}"/>
            </attribute-mapper>
            <transition on="done" to="initAction"/>
            <transition on="cancel" to="initAction"/>
            <transition on="displayError" to="initAction"/>
        </subflow-state>
    -->
    <view-state id="displayError" view="modules/flowError">
        <on-entry>
            <set name="flowScope.prevForm" value="'displayError'"/>
        </on-entry>
        <transition on="displayError" to="initAction"/>
    </view-state>

    <subflow-state id="reportJobs" subflow="reportSchedulingFlow">
        <input name="reportUnitURI" value="requestParameters.resource"/>
        <transition on="done" to="initAction"/>
    </subflow-state>

    <subflow-state id="runReportInBackground" subflow="reportJobFlow">
        <input name="isNewMode" value="true"/>
        <input name="isRunNowMode" value="true"/>
        <input name="reportUnitURI" value="requestParameters.resource"/>
        <transition on="cancel" to="initAction"/>
        <transition on="saved" to="initAction"/>
    </subflow-state>

    <end-state id="cancel"/>

    <!-- exceptions handling -->
    <decision-state id="backFromError">
        <if test="not (flowScope.prevForm == null or flowScope.prevForm == '')" then="${flowScope.prevForm}"
            else="initAction"/>
    </decision-state>

    <view-state id="errorPage" view="modules/system/errorPage"/>

    <global-transitions>
        <transition on="backFromErrorPage" to="backFromError"/>
        <transition on-exception="java.lang.Throwable" to="errorPage"/>
    </global-transitions>

    <!-- end exceptions handling -->
    
    <bean-import resource="spring-config.xml"/>

    <bean-import resource="repositoryBeans.xml"/>

    <!-- AKCHAN STARTS -->
    <bean-import resource="repositoryExplorerProBean.xml"/>

    <!-- AKCHAN ENDS -->
</flow>
