-----------------------------------------------------MV_TEST_PROGRAM--------------------------------------------------------
CREATE MATERIALIZED VIEW MV_TEST_PROGRAM
REFRESH COMPLETE ON DEMAND
AS
SELECT LVL2.CUSTOMERID,
       LVL2.NUM_LEVELS,
       CASE
       WHEN LVL2.NUM_LEVELS=1 THEN
            LVL2.LVL_NAME
       ELSE
            SUBSTR(LVL2.LVL_NAME,1, INSTR(LVL2.LVL_NAME,'~',1,1)-1 )
       END AS ORG_LEVEL1_TYPE,
       CASE
       WHEN LVL2.NUM_LEVELS=2 THEN
            SUBSTR(LVL2.LVL_NAME,INSTR(LVL2.LVL_NAME,'~',1,1)+1,LENGTH(LVL2.LVL_NAME)-INSTR(LVL2.LVL_NAME,'~',1,1))
       ELSE
            SUBSTR(LVL2.LVL_NAME,INSTR(LVL2.LVL_NAME,'~',1,1)+1, INSTR(LVL2.LVL_NAME,'~',1,2)-INSTR(LVL2.LVL_NAME,'~',1,1)-1 )
       END AS ORG_LEVEL2_TYPE,
       CASE
       WHEN LVL2.NUM_LEVELS=3 THEN
            SUBSTR(LVL2.LVL_NAME,INSTR(LVL2.LVL_NAME,'~',1,2)+1,LENGTH(LVL2.LVL_NAME)-INSTR(LVL2.LVL_NAME,'~',1,2))
       ELSE
            SUBSTR(LVL2.LVL_NAME,INSTR(LVL2.LVL_NAME,'~',1,2)+1, INSTR(LVL2.LVL_NAME,'~',1,3)-INSTR(LVL2.LVL_NAME,'~',1,2)-1 )
       END AS ORG_LEVEL3_TYPE,
       CASE
       WHEN LVL2.NUM_LEVELS=4 THEN
            SUBSTR(LVL2.LVL_NAME,INSTR(LVL2.LVL_NAME,'~',1,3)+1, LENGTH(LVL2.LVL_NAME)-INSTR(LVL2.LVL_NAME,'~',1,3))
       ELSE
            SUBSTR(LVL2.LVL_NAME,INSTR(LVL2.LVL_NAME,'~',1,3)+1, INSTR(LVL2.LVL_NAME,'~',1,4)-INSTR(LVL2.LVL_NAME,'~',1,3)-1 )
       END AS ORG_LEVEL4_TYPE,
       CASE
       WHEN LVL2.NUM_LEVELS=5 THEN
            SUBSTR(LVL2.LVL_NAME,INSTR(LVL2.LVL_NAME,'~',1,4)+1,LENGTH(LVL2.LVL_NAME)-INSTR(LVL2.LVL_NAME,'~',1,4))
       ELSE
            SUBSTR(LVL2.LVL_NAME,INSTR(LVL2.LVL_NAME,'~',1,4)+1, INSTR(LVL2.LVL_NAME,'~',1,5)-INSTR(LVL2.LVL_NAME,'~',1,4)-1 )
       END AS ORG_LEVEL5_TYPE,
       CASE
       WHEN LVL2.NUM_LEVELS=6 THEN
            SUBSTR(LVL2.LVL_NAME,INSTR(LVL2.LVL_NAME,'~',1,5)+1,LENGTH(LVL2.LVL_NAME)-INSTR(LVL2.LVL_NAME,'~',1,5))
       ELSE
            SUBSTR(LVL2.LVL_NAME,INSTR(LVL2.LVL_NAME,'~',1,5)+1, INSTR(LVL2.LVL_NAME,'~',1,6)-INSTR(LVL2.LVL_NAME,'~',1,5)-1 )
       END AS ORG_LEVEL6_TYPE,
       CASE
       WHEN LVL2.NUM_LEVELS=7 THEN
       SUBSTR(LVL2.LVL_NAME,INSTR(LVL2.LVL_NAME,'~',1,6)+1, LENGTH(LVL2.LVL_NAME)-INSTR(LVL2.LVL_NAME,'~',1,6))
       ELSE
            SUBSTR(LVL2.LVL_NAME,INSTR(LVL2.LVL_NAME,'~',1,6)+1, INSTR(LVL2.LVL_NAME,'~',1,7)-INSTR(LVL2.LVL_NAME,'~',1,6)-1 )
       END AS ORG_LEVEL7_TYPE,
       CASE
       WHEN LVL2.NUM_LEVELS=8 THEN
            SUBSTR(LVL2.LVL_NAME,INSTR(LVL2.LVL_NAME,'~',1,7)+1,LENGTH(LVL2.LVL_NAME)-INSTR(LVL2.LVL_NAME,'~',1,7))
       ELSE
            SUBSTR(LVL2.LVL_NAME,INSTR(LVL2.LVL_NAME,'~',1,7)+1, INSTR(LVL2.LVL_NAME,'~',1,8)-INSTR(LVL2.LVL_NAME,'~',1,7)-1 )
       END AS ORG_LEVEL8_TYPE,
       CASE
       WHEN LVL2.NUM_LEVELS=9 THEN
            SUBSTR(LVL2.LVL_NAME,INSTR(LVL2.LVL_NAME,'~',1,8)+1,LENGTH(LVL2.LVL_NAME)-INSTR(LVL2.LVL_NAME,'~',1,8))
       ELSE
            SUBSTR(LVL2.LVL_NAME,INSTR(LVL2.LVL_NAME,'~',1,8)+1,INSTR(LVL2.LVL_NAME,'~',1,8)-INSTR(LVL2.LVL_NAME,'~',1,7)-1 )
       END AS ORG_LEVEL9_TYPE
FROM (SELECT LVL1.CUSTOMERID,LVL1.NUM_LEVELS,LISTAGG (LVL1.ORG_LABEL,'~') WITHIN GROUP (ORDER BY LVL1.ORG_LEVEL) AS LVL_NAME
          FROM (SELECT DISTINCT ORG_SRTUC.ORG_LEVEL ,ORG_SRTUC.ORG_LABEL ,TP.NUM_LEVELS,TP.CUSTOMERID
                  FROM TEST_PROGRAM TP,ORG_TP_STRUCTURE ORG_SRTUC
                   WHERE TP.ACTIVATION_STATUS = 'AC'
                     AND ORG_SRTUC.TP_ID = TP.TP_ID
                     ORDER BY  ORG_SRTUC.ORG_LEVEL)LVL1
                     GROUP BY LVL1.CUSTOMERID,
                              LVL1.NUM_LEVELS)LVL2;
							  
-----------------------------------------------------MV_PROF_LEVEL_SCORE_RANGE--------------------------------------------------------							  
CREATE MATERIALIZED VIEW MV_ORG_TP_STRUCTURE
REFRESH FORCE ON DEMAND
AS
SELECT TP_ID, ORG_LEVEL, ORG_LABEL, DATETIMESTAMP
					/* *******************************************************
                    * This MATERIALIZED VIEW is created as a part of performance
                    * improvemnt for the queries of the manage modules
                    * DATE: Mar-02-2015
                    * AUTHOR: Partha
                    *********************************************************/
  FROM PRISMGLOBAL.ORG_TP_STRUCTURE
 WHERE TP_ID IN (SELECT TP_ID FROM TEST_PROGRAM); 
 
-----------------------------------------------------MV_PROF_LEVEL_SCORE_RANGE--------------------------------------------------------
CREATE MATERIALIZED VIEW MV_PROF_LEVEL_SCORE_RANGE
REFRESH COMPLETE ON DEMAND
AS
SELECT CUTSCORESCALESCOREID,
       CUST_PROD_ID,
       GRADEID,
       LEVELID,
       SUBTESTID,
       PL1_LOW_VAL,
       PL1_HIGH_VAL,
       PL2_LOW_VAL,
       PL2_HIGH_VAL,
       PL3_LOW_VAL,
       PL3_HIGH_VAL,
       PL4_LOW_VAL,
       PL4_HIGH_VAL,
       PL4_HIGH_VAL - PL1_LOW_VAL AS TOTAL_RANGE,
       PL1_HIGH_VAL-PL1_LOW_VAL AS RANGE_BELOW_BASIC,
       PL2_HIGH_VAL-PL1_HIGH_VAL AS RANGE_BASIC,
       PL3_HIGH_VAL-PL2_HIGH_VAL AS RANGE_PROFICIENT,
       PL4_HIGH_VAL-PL3_HIGH_VAL AS RANGE_ADVANCED,
       CREATED_DATETIME,
       UPDATED_DATETIME
FROM(SELECT CUTSCORESCALESCOREID,
       CUST_PROD_ID,
       GRADEID,
       LEVELID,
       SUBTESTID,
       PASS,
       PASSPLUS,
       PL,
       PASS AS PL1_LOW_VAL,
       PASSPLUS AS PL1_HIGH_VAL,
       LEAD(PASS, 1, 0) OVER (PARTITION BY CUST_PROD_ID,GRADEID,LEVELID,SUBTESTID ORDER BY PL  NULLS LAST) PL2_LOW_VAL,
       LEAD(PASSPLUS, 1, 0) OVER (PARTITION BY CUST_PROD_ID,GRADEID,LEVELID,SUBTESTID ORDER BY PL  NULLS LAST) PL2_HIGH_VAL,
       LEAD(PASS, 2, 0) OVER (PARTITION BY CUST_PROD_ID,GRADEID,LEVELID,SUBTESTID ORDER BY PL  NULLS LAST) PL3_LOW_VAL,
       LEAD(PASSPLUS, 2, 0) OVER (PARTITION BY CUST_PROD_ID,GRADEID,LEVELID,SUBTESTID ORDER BY PL  NULLS LAST) PL3_HIGH_VAL,
       LEAD(PASS, 3, 0) OVER (PARTITION BY CUST_PROD_ID,GRADEID,LEVELID,SUBTESTID ORDER BY PL  NULLS LAST) PL4_LOW_VAL,
       LEAD(PASSPLUS, 3, 0) OVER (PARTITION BY CUST_PROD_ID,GRADEID,LEVELID,SUBTESTID ORDER BY PL  NULLS LAST) PL4_HIGH_VAL,
       SYSDATE AS CREATED_DATETIME,
       SYSDATE AS UPDATED_DATETIME
 FROM CUTSCORESCALESCORE WHERE PL IN (1,2,3,4)
 ORDER BY CUST_PROD_ID,
       GRADEID,
       LEVELID,
       SUBTESTID,
       PL)A
  WHERE  A.PL =1;
  
-----------------------------------------------------MV_RPRT_STUD_DETAILS--------------------------------------------------------
CREATE MATERIALIZED VIEW LOG ON SUBTEST_SCORE_FACT; 
--NOW RUN THE PACKAGE PKG_RPRT_STUD_DETAILS.PCK

CREATE MATERIALIZED VIEW MV_RPRT_STUD_DETAILS
REFRESH FAST ON DEMAND
AS
SELECT
SCR.SUBTEST_FACTID,
SCR.STUDENT_BIO_ID,
PKG_RPRT_STUD_DETAILS.SF_GET_STUDENT_BIO(P_STUDENT_BIO_ID =>SCR.STUDENT_BIO_ID,P_CUSTOMER_CODE=>'MO',P_ADMINID=>SCR.ADMINID,P_GRADEID=>SCR.GRADEID,P_GENDERID=>SCR.GENDERID,P_COLUMNTYPE=>'FIRST_NAME') AS FIRST_NAME,
PKG_RPRT_STUD_DETAILS.SF_GET_STUDENT_BIO(P_STUDENT_BIO_ID =>SCR.STUDENT_BIO_ID,P_CUSTOMER_CODE=>'MO',P_ADMINID=>SCR.ADMINID,P_GRADEID=>SCR.GRADEID,P_GENDERID=>SCR.GENDERID,P_COLUMNTYPE=>'LAST_NAME') AS LAST_NAME,
PKG_RPRT_STUD_DETAILS.SF_GET_STUDENT_BIO(P_STUDENT_BIO_ID =>SCR.STUDENT_BIO_ID,P_CUSTOMER_CODE=>'MO',P_ADMINID=>SCR.ADMINID,P_GRADEID=>SCR.GRADEID,P_GENDERID=>SCR.GENDERID,P_COLUMNTYPE=>'MIDDLE_NAME') AS MIDDLE_NAME,
PKG_RPRT_STUD_DETAILS.SF_GET_STUDENT_BIO(P_STUDENT_BIO_ID =>SCR.STUDENT_BIO_ID,P_CUSTOMER_CODE=>'MO',P_ADMINID=>SCR.ADMINID,P_GRADEID=>SCR.GRADEID,P_GENDERID=>SCR.GENDERID,P_COLUMNTYPE=>'BIRTHDATE') AS BIRTHDATE,
PKG_RPRT_STUD_DETAILS.SF_GET_STUDENT_BIO(P_STUDENT_BIO_ID =>SCR.STUDENT_BIO_ID,P_CUSTOMER_CODE=>'MO',P_ADMINID=>SCR.ADMINID,P_GRADEID=>SCR.GRADEID,P_GENDERID=>SCR.GENDERID,P_COLUMNTYPE=>'EXT_STUDENT_ID') AS EXT_STUDENT_ID,
PKG_RPRT_STUD_DETAILS.SF_GET_DISTRICT_NAME_CODE(P_ORG_NODEID =>SCR.ORG_NODEID,P_CUSTOMER_CODE=>'MO',P_COLUMNTYPE=>'ORG_NODE_CODE') AS DISTRICT_CODE,
PKG_RPRT_STUD_DETAILS.SF_GET_DISTRICT_NAME_CODE(P_ORG_NODEID =>SCR.ORG_NODEID,P_CUSTOMER_CODE=>'MO',P_COLUMNTYPE=>'ORG_NODE_NAME') AS DISTRICT_NAME,
PKG_RPRT_STUD_DETAILS.SF_GET_SCHOOL_NAME_CODE(P_ORG_NODEID =>SCR.ORG_NODEID,P_CUSTOMER_CODE=>'MO',P_COLUMNTYPE=>'ORG_NODE_CODE') AS SCHOOL_CODE,
PKG_RPRT_STUD_DETAILS.SF_GET_SCHOOL_NAME_CODE(P_ORG_NODEID =>SCR.ORG_NODEID,P_CUSTOMER_CODE=>'MO',P_COLUMNTYPE=>'ORG_NODE_NAME') AS SCHOOL_NAME,
PKG_RPRT_STUD_DETAILS.SF_GET_DISTRICTID(P_ORG_NODEID =>SCR.ORG_NODEID,P_CUSTOMER_CODE=>'MO') AS DISTRICT_ORG_NODEID,
SCR.ORG_NODEID AS SCHOOL_ORG_NODEID,
SCR.CUST_PROD_ID,
SCR.ASSESSMENTID,
SCR.CONTENTID,
SCR.SUBTESTID,
PKG_RPRT_STUD_DETAILS.SF_GET_SUBTEST_DETAILS( P_SUBTESTID=>SCR.SUBTESTID, P_COLUMNTYPE =>'SUBTEST_NAME') AS SUBTEST_NAME,
PKG_RPRT_STUD_DETAILS.SF_GET_SUBTEST_DETAILS( P_SUBTESTID=>SCR.SUBTESTID, P_COLUMNTYPE =>'SUBTEST_CODE') AS SUBTEST_CODE,
PKG_RPRT_STUD_DETAILS.SF_GET_SUBTEST_DETAILS( P_SUBTESTID=>SCR.SUBTESTID, P_COLUMNTYPE =>'SUBTEST_SEQ') AS SUBTEST_SEQ,
SCR.GENDERID,
SCR.GRADEID,
SCR.LEVELID,
SCR.FORMID,
SCR.ADMINID,
SCR.SS,
SCR.PL,
SCR.PR,
SCR.NCR,
PKG_RPRT_STUD_DETAILS.SF_GET_OBJECTIVE_LIST( P_STUDENT_BIO_ID =>SCR.STUDENT_BIO_ID, P_SUBTESTID=>SCR.SUBTESTID,P_GRADEID=>SCR.GRADEID, P_LEVELID=>SCR.LEVELID,P_FORMID=>SCR.FORMID, P_CUST_PROD_ID=>SCR.CUST_PROD_ID,P_ADMINID=>SCR.ADMINID,P_COLUMNTYPE=>'OBJECTIVEID') AS OBJECTIVEIDS,
PKG_RPRT_STUD_DETAILS.SF_GET_OBJECTIVE_LIST( P_STUDENT_BIO_ID =>SCR.STUDENT_BIO_ID, P_SUBTESTID=>SCR.SUBTESTID,P_GRADEID=>SCR.GRADEID, P_LEVELID=>SCR.LEVELID,P_FORMID=>SCR.FORMID, P_CUST_PROD_ID=>SCR.CUST_PROD_ID,P_ADMINID=>SCR.ADMINID,P_COLUMNTYPE=>'PL') AS OBJ_PLS,
PKG_RPRT_STUD_DETAILS.SF_GET_SCORE_RANGE( P_COLUMNTYPE =>'PL1_LOW_VAL', P_SUBTESTID=>SCR.SUBTESTID,P_GRADEID=>SCR.GRADEID, P_LEVELID=>SCR.LEVELID, P_CUST_PROD_ID=>SCR.CUST_PROD_ID) AS PL1_LOW_VAL,
PKG_RPRT_STUD_DETAILS.SF_GET_SCORE_RANGE( P_COLUMNTYPE =>'PL1_HIGH_VAL', P_SUBTESTID=>SCR.SUBTESTID,P_GRADEID=>SCR.GRADEID, P_LEVELID=>SCR.LEVELID, P_CUST_PROD_ID=>SCR.CUST_PROD_ID) AS PL1_HIGH_VAL,
PKG_RPRT_STUD_DETAILS.SF_GET_SCORE_RANGE( P_COLUMNTYPE =>'PL2_LOW_VAL', P_SUBTESTID=>SCR.SUBTESTID,P_GRADEID=>SCR.GRADEID, P_LEVELID=>SCR.LEVELID, P_CUST_PROD_ID=>SCR.CUST_PROD_ID) AS PL2_LOW_VAL,
PKG_RPRT_STUD_DETAILS.SF_GET_SCORE_RANGE( P_COLUMNTYPE =>'PL2_HIGH_VAL', P_SUBTESTID=>SCR.SUBTESTID,P_GRADEID=>SCR.GRADEID, P_LEVELID=>SCR.LEVELID, P_CUST_PROD_ID=>SCR.CUST_PROD_ID) AS PL2_HIGH_VAL,
PKG_RPRT_STUD_DETAILS.SF_GET_SCORE_RANGE( P_COLUMNTYPE =>'PL3_LOW_VAL', P_SUBTESTID=>SCR.SUBTESTID,P_GRADEID=>SCR.GRADEID, P_LEVELID=>SCR.LEVELID, P_CUST_PROD_ID=>SCR.CUST_PROD_ID) AS PL3_LOW_VAL,
PKG_RPRT_STUD_DETAILS.SF_GET_SCORE_RANGE( P_COLUMNTYPE =>'PL3_HIGH_VAL', P_SUBTESTID=>SCR.SUBTESTID,P_GRADEID=>SCR.GRADEID, P_LEVELID=>SCR.LEVELID, P_CUST_PROD_ID=>SCR.CUST_PROD_ID) AS PL3_HIGH_VAL,
PKG_RPRT_STUD_DETAILS.SF_GET_SCORE_RANGE( P_COLUMNTYPE =>'PL4_LOW_VAL', P_SUBTESTID=>SCR.SUBTESTID,P_GRADEID=>SCR.GRADEID, P_LEVELID=>SCR.LEVELID, P_CUST_PROD_ID=>SCR.CUST_PROD_ID) AS PL4_LOW_VAL,
PKG_RPRT_STUD_DETAILS.SF_GET_SCORE_RANGE( P_COLUMNTYPE =>'PL4_HIGH_VAL', P_SUBTESTID=>SCR.SUBTESTID,P_GRADEID=>SCR.GRADEID, P_LEVELID=>SCR.LEVELID, P_CUST_PROD_ID=>SCR.CUST_PROD_ID) AS PL4_HIGH_VAL,
PKG_RPRT_STUD_DETAILS.SF_GET_SCORE_RANGE( P_COLUMNTYPE =>'TOTAL_RANGE', P_SUBTESTID=>SCR.SUBTESTID,P_GRADEID=>SCR.GRADEID, P_LEVELID=>SCR.LEVELID, P_CUST_PROD_ID=>SCR.CUST_PROD_ID) AS TOTAL_RANGE,
PKG_RPRT_STUD_DETAILS.SF_GET_SCORE_RANGE( P_COLUMNTYPE =>'RANGE_BELOW_BASIC', P_SUBTESTID=>SCR.SUBTESTID,P_GRADEID=>SCR.GRADEID, P_LEVELID=>SCR.LEVELID, P_CUST_PROD_ID=>SCR.CUST_PROD_ID) AS RANGE_BELOW_BASIC,
PKG_RPRT_STUD_DETAILS.SF_GET_SCORE_RANGE( P_COLUMNTYPE =>'RANGE_BASIC', P_SUBTESTID=>SCR.SUBTESTID,P_GRADEID=>SCR.GRADEID, P_LEVELID=>SCR.LEVELID, P_CUST_PROD_ID=>SCR.CUST_PROD_ID) AS RANGE_BASIC,
PKG_RPRT_STUD_DETAILS.SF_GET_SCORE_RANGE( P_COLUMNTYPE =>'RANGE_PROFICIENT', P_SUBTESTID=>SCR.SUBTESTID,P_GRADEID=>SCR.GRADEID, P_LEVELID=>SCR.LEVELID, P_CUST_PROD_ID=>SCR.CUST_PROD_ID) AS RANGE_PROFICIENT,
PKG_RPRT_STUD_DETAILS.SF_GET_SCORE_RANGE( P_COLUMNTYPE =>'RANGE_ADVANCED', P_SUBTESTID=>SCR.SUBTESTID,P_GRADEID=>SCR.GRADEID, P_LEVELID=>SCR.LEVELID, P_CUST_PROD_ID=>SCR.CUST_PROD_ID) AS RANGE_ADVANCED,
PKG_RPRT_STUD_DETAILS.SF_GET_SUBTEST_DEMO_EXAMINER( P_SUBTESTID=>SCR.SUBTESTID, P_STUDENT_BIO_ID=>SCR.STUDENT_BIO_ID,P_CUSTOMER_CODE=>'MO') AS EXAMINER,
PKG_RPRT_STUD_DETAILS.SF_GET_SUBTEST_DEMO_VALUE( P_DEMOCODE=>'Accomm_1',P_STUDENT_BIO_ID=>SCR.STUDENT_BIO_ID,P_SUBTESTID=>SCR.SUBTESTID,P_CUSTOMER_CODE=>'MO') AS BRAILLE,
PKG_RPRT_STUD_DETAILS.SF_GET_SUBTEST_DEMO_VALUE( P_DEMOCODE=>'Accomm_2',P_STUDENT_BIO_ID=>SCR.STUDENT_BIO_ID,P_SUBTESTID=>SCR.SUBTESTID,P_CUSTOMER_CODE=>'MO') AS LARGE_PRINT,
PKG_RPRT_STUD_DETAILS.SF_GET_STUDENT_DEMO_VALUE( P_DEMOCODE=>'Teach_Inval',P_STUDENT_BIO_ID=>SCR.STUDENT_BIO_ID,P_CUSTOMER_CODE=>'MO') AS TEACHER_INVALIDATION,
PKG_RPRT_STUD_DETAILS.SF_GET_STUDENT_DEMO_VALID( P_DEMOCODE=>'Home_Sch',P_STUDENT_BIO_ID=>SCR.STUDENT_BIO_ID,P_CUSTOMER_CODE=>'MO') AS HOME_SCHOOL,
PKG_RPRT_STUD_DETAILS.SF_GET_STUDENT_DEMO_VALID( P_DEMOCODE=>'Private_Sch',P_STUDENT_BIO_ID=>SCR.STUDENT_BIO_ID,P_CUSTOMER_CODE=>'MO') AS PRIVATE_SCHOOL,
PKG_RPRT_STUD_DETAILS.SF_GET_STUDENT_DEMO_VALID( P_DEMOCODE=>'Race_Ethn',P_STUDENT_BIO_ID=>SCR.STUDENT_BIO_ID,P_CUSTOMER_CODE=>'MO') AS ETHNICITYID,
PKG_RPRT_STUD_DETAILS.SF_GET_OBJECTIVE_SCORE(SUBTEST_CODE=>'01', OBJECTIVE_CODE=>'1', P_STUDENT_BIO_ID =>SCR.STUDENT_BIO_ID, p_columntype =>'PC',p_subtest_id=>SCR.SUBTESTID) AS OBJ_ELA_RD_PC,
PKG_RPRT_STUD_DETAILS.SF_GET_OBJECTIVE_SCORE(SUBTEST_CODE=>'01', OBJECTIVE_CODE=>'2', P_STUDENT_BIO_ID =>SCR.STUDENT_BIO_ID, p_columntype =>'PC',p_subtest_id=>SCR.SUBTESTID) AS OBJ_ELA_WR_PC,
PKG_RPRT_STUD_DETAILS.SF_GET_OBJECTIVE_SCORE(SUBTEST_CODE=>'01', OBJECTIVE_CODE=>'3', P_STUDENT_BIO_ID =>SCR.STUDENT_BIO_ID, p_columntype =>'PC',p_subtest_id=>SCR.SUBTESTID) AS OBJ_ELA_LTSN_PC,
PKG_RPRT_STUD_DETAILS.SF_GET_OBJECTIVE_SCORE(SUBTEST_CODE=>'01', OBJECTIVE_CODE=>'4', P_STUDENT_BIO_ID =>SCR.STUDENT_BIO_ID, p_columntype =>'PC',p_subtest_id=>SCR.SUBTESTID) AS OBJ_ELA_RES_PC,
PKG_RPRT_STUD_DETAILS.SF_GET_OBJECTIVE_SCORE(SUBTEST_CODE=>'02', OBJECTIVE_CODE=>'1', P_STUDENT_BIO_ID =>SCR.STUDENT_BIO_ID, p_columntype =>'PC',p_subtest_id=>SCR.SUBTESTID) AS OBJ_MA_CONCEPT_PC,
PKG_RPRT_STUD_DETAILS.SF_GET_OBJECTIVE_SCORE(SUBTEST_CODE=>'02', OBJECTIVE_CODE=>'2', P_STUDENT_BIO_ID =>SCR.STUDENT_BIO_ID, p_columntype =>'PC',p_subtest_id=>SCR.SUBTESTID) AS OBJ_MA_PROB_SLV_PC,
PKG_RPRT_STUD_DETAILS.SF_GET_OBJECTIVE_SCORE(SUBTEST_CODE=>'02', OBJECTIVE_CODE=>'3', P_STUDENT_BIO_ID =>SCR.STUDENT_BIO_ID, p_columntype =>'PC',p_subtest_id=>SCR.SUBTESTID) AS OBJ_MA_COMM_PC,
PKG_RPRT_STUD_DETAILS.SF_GET_OBJECTIVE_SCORE(SUBTEST_CODE=>'03', OBJECTIVE_CODE=>'1', P_STUDENT_BIO_ID =>SCR.STUDENT_BIO_ID, p_columntype =>'PC',p_subtest_id=>SCR.SUBTESTID) AS OBJ_SCI_MAT_PC,
PKG_RPRT_STUD_DETAILS.SF_GET_OBJECTIVE_SCORE(SUBTEST_CODE=>'03', OBJECTIVE_CODE=>'2', P_STUDENT_BIO_ID =>SCR.STUDENT_BIO_ID, p_columntype =>'PC',p_subtest_id=>SCR.SUBTESTID) AS OBJ_SCI_FRC_MTN_PC,
PKG_RPRT_STUD_DETAILS.SF_GET_OBJECTIVE_SCORE(SUBTEST_CODE=>'03', OBJECTIVE_CODE=>'3', P_STUDENT_BIO_ID =>SCR.STUDENT_BIO_ID, p_columntype =>'PC',p_subtest_id=>SCR.SUBTESTID) AS OBJ_SCI_LVNG_PC,
PKG_RPRT_STUD_DETAILS.SF_GET_OBJECTIVE_SCORE(SUBTEST_CODE=>'03', OBJECTIVE_CODE=>'4', P_STUDENT_BIO_ID =>SCR.STUDENT_BIO_ID, p_columntype =>'PC',p_subtest_id=>SCR.SUBTESTID) AS OBJ_SCI_ECO_PC,
PKG_RPRT_STUD_DETAILS.SF_GET_OBJECTIVE_SCORE(SUBTEST_CODE=>'03', OBJECTIVE_CODE=>'5', P_STUDENT_BIO_ID =>SCR.STUDENT_BIO_ID, p_columntype =>'PC',p_subtest_id=>SCR.SUBTESTID) AS OBJ_SCI_ERTH_PC,
PKG_RPRT_STUD_DETAILS.SF_GET_OBJECTIVE_SCORE(SUBTEST_CODE=>'03', OBJECTIVE_CODE=>'6', P_STUDENT_BIO_ID =>SCR.STUDENT_BIO_ID, p_columntype =>'PC',p_subtest_id=>SCR.SUBTESTID) AS OBJ_SCI_UNIV_PC,
PKG_RPRT_STUD_DETAILS.SF_GET_OBJECTIVE_SCORE(SUBTEST_CODE=>'03', OBJECTIVE_CODE=>'7', P_STUDENT_BIO_ID =>SCR.STUDENT_BIO_ID, p_columntype =>'PC',p_subtest_id=>SCR.SUBTESTID) AS OBJ_SCI_SCINQ_PC,
PKG_RPRT_STUD_DETAILS.SF_GET_OBJECTIVE_SCORE(SUBTEST_CODE=>'03', OBJECTIVE_CODE=>'8', P_STUDENT_BIO_ID =>SCR.STUDENT_BIO_ID, p_columntype =>'PC',p_subtest_id=>SCR.SUBTESTID) AS OBJ_SCI_IMPCT_PC,
SCR.DATETIMESTAMP
FROM SUBTEST_SCORE_FACT SCR;

