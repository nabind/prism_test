CREATE OR REPLACE PACKAGE PKG_RESCORE_REQUEST AS

  TYPE GET_REFCURSOR IS REF CURSOR;
  PROCEDURE SP_GET_DNP_STUDENT_DETAILS(P_IN_CUSTOMERID     IN CUSTOMER_INFO.CUSTOMERID%TYPE,
                                       P_IN_PRODUCTID      IN PRODUCT.PRODUCTID%TYPE,
                                       P_IN_ORG_NODEID     IN ORG_NODE_DIM.ORG_NODEID%TYPE,
                                       P_IN_GRADEID        IN GRADE_DIM.GRADEID%TYPE,
                                       P_OUT_CUR_DNP       OUT GET_REFCURSOR,
                                       P_OUT_EXCEP_ERR_MSG OUT VARCHAR2);

  PROCEDURE SP_SUBMIT_RESCORE_REQUEST(P_IN_ITEMSETID        IN ITEMSET_DIM.ITEMSETID%TYPE,
                                      P_IN_RRF_ID           IN RESCORE_REQUEST_FORM.RRF_ID%TYPE,
                                      P_IN_USERID           RESCORE_REQUEST_FORM.REQUESTED_USERID%TYPE,
                                      P_IN_REQUESTED_STATUS RESCORE_REQUEST_FORM.IS_REQUESTED%TYPE,
                                      P_IN_REQUESTED_DATE   RESCORE_REQUEST_FORM.REQUESTED_DATE%TYPE,
                                      P_OUT_STATUS_NUMBER   OUT NUMBER,
                                      P_OUT_EXCEP_ERR_MSG   OUT VARCHAR2);

  PROCEDURE SP_RESET_ITEM_STATE(P_IN_SUBTESTID        IN SUBTEST_DIM.SUBTESTID %TYPE,
                                P_IN_STUDENT_BIO_ID   IN STUDENT_BIO_DIM.STUDENT_BIO_ID%TYPE,
                                P_IN_USERID           RESCORE_REQUEST_FORM.REQUESTED_USERID%TYPE,
                                P_IN_REQUESTED_STATUS RESCORE_REQUEST_FORM.IS_REQUESTED%TYPE,
                                P_OUT_STATUS_NUMBER   OUT NUMBER,
                                P_OUT_EXCEP_ERR_MSG   OUT VARCHAR2);

END PKG_RESCORE_REQUEST;
/
CREATE OR REPLACE PACKAGE BODY PKG_RESCORE_REQUEST AS

  PROCEDURE SP_GET_DNP_STUDENT_DETAILS(P_IN_CUSTOMERID     IN CUSTOMER_INFO.CUSTOMERID%TYPE,
                                       P_IN_PRODUCTID      IN PRODUCT.PRODUCTID%TYPE,
                                       P_IN_ORG_NODEID     IN ORG_NODE_DIM.ORG_NODEID%TYPE,
                                       P_IN_GRADEID        IN GRADE_DIM.GRADEID%TYPE,
                                       P_OUT_CUR_DNP       OUT GET_REFCURSOR,
                                       P_OUT_EXCEP_ERR_MSG OUT VARCHAR2) IS
  
  BEGIN
    OPEN P_OUT_CUR_DNP FOR
      SELECT RRF.RRF_ID RRF_ID,
             RRF.STUDENT_BIO_ID STUDENT_BIO_ID,
             (SELECT LAST_NAME || ',' || FIRST_NAME || ' ' ||
                     SUBSTR(MIDDLE_NAME, 1, 1)
                FROM STUDENT_BIO_DIM
               WHERE STUDENT_BIO_ID = RRF.STUDENT_BIO_ID) STUDENT_FULL_NAME,
             NVL(RRF.REQUESTED_DATE, -1) ACTUAL_REQUESTED_DATE,
             NVL((SELECT REQUESTED_DATE
                   FROM RESCORE_REQUEST_FORM
                  WHERE UPDATED_DATE_TIME =
                        (SELECT MAX(A.UPDATED_DATE_TIME)
                           FROM RESCORE_REQUEST_FORM A
                          WHERE A.STUDENT_BIO_ID = RRF.STUDENT_BIO_ID)
                    AND ROWNUM = 1),
                 -1) REQUESTED_DATE,
             RRF.SUBTESTID SUBTESTID,
             SD.SUBTEST_CODE SUBTEST_CODE,
             ISD.SESSION_ID SESSION_ID,
             RRF.ORIGINAL_PERFORMANCE_LEVEL PERFORMANCE_LEVEL,
             RRF.ORIGINAL_SCORE ORIGINAL_SCORE,
             RRF.ITEMSETID ITEMSETID,
             ISD.ITEM_NUMBER ITEM_NUMBER,
             RRF.IS_REQUESTED IS_REQUESTED,
             RRF.REQUESTED_USERID USERID,
             (SELECT USERNAME FROM USERS WHERE USERID = RRF.REQUESTED_USERID) USERNAME
        FROM RESCORE_REQUEST_FORM RRF,
             ITEMSET_DIM          ISD,
             SUBTEST_DIM          SD,
             CUST_PRODUCT_LINK    CPL,
             ORG_NODE_DIM         OND
       WHERE RRF.ELIGIBLE_FOR_RESCORE = 'Y'
         AND RRF.ORG_NODEID = OND.ORG_NODEID
         AND OND.PARENT_ORG_NODEID = P_IN_ORG_NODEID
         AND RRF.GRADEID = P_IN_GRADEID
         AND RRF.CUST_PROD_ID = CPL.CUST_PROD_ID
         AND CPL.CUSTOMERID = P_IN_CUSTOMERID
         AND CPL.PRODUCTID = P_IN_PRODUCTID
         AND RRF.ITEMSETID = ISD.ITEMSETID
         AND RRF.SUBTESTID = SD.SUBTESTID
         AND EXISTS
       (SELECT 1
                FROM RESCORE_REQUEST_FORM R
               WHERE R.STUDENT_BIO_ID = RRF.STUDENT_BIO_ID
                 AND R.ORIGINAL_PERFORMANCE_LEVEL = 'DNP')
       ORDER BY STUDENT_FULL_NAME,
                SD.SUBTEST_SEQ,
                ISD.SESSION_ID,
                RRF.ITEMSETID;
  
  EXCEPTION
    WHEN OTHERS THEN
      P_OUT_EXCEP_ERR_MSG := UPPER(SUBSTR(SQLERRM, 12, 255));
  END SP_GET_DNP_STUDENT_DETAILS;

  PROCEDURE SP_SUBMIT_RESCORE_REQUEST(P_IN_ITEMSETID        IN ITEMSET_DIM.ITEMSETID%TYPE,
                                      P_IN_RRF_ID           IN RESCORE_REQUEST_FORM.RRF_ID%TYPE,
                                      P_IN_USERID           RESCORE_REQUEST_FORM.REQUESTED_USERID%TYPE,
                                      P_IN_REQUESTED_STATUS RESCORE_REQUEST_FORM.IS_REQUESTED%TYPE,
                                      P_IN_REQUESTED_DATE   RESCORE_REQUEST_FORM.REQUESTED_DATE%TYPE,
                                      P_OUT_STATUS_NUMBER   OUT NUMBER,
                                      P_OUT_EXCEP_ERR_MSG   OUT VARCHAR2) IS
  BEGIN
    P_OUT_STATUS_NUMBER := 0;
  
    UPDATE RESCORE_REQUEST_FORM RRF
       SET RRF.IS_REQUESTED      = P_IN_REQUESTED_STATUS,
           RRF.UPDATED_DATE_TIME = SYSDATE,
           RRF.REQUESTED_USERID  = P_IN_USERID,
           RRF.REQUESTED_DATE    = P_IN_REQUESTED_DATE
     WHERE RRF.RRF_ID = P_IN_RRF_ID
       AND RRF.ITEMSETID = P_IN_ITEMSETID;
  
    P_OUT_STATUS_NUMBER := 1;
  
    COMMIT;
  EXCEPTION
    WHEN OTHERS THEN
      P_OUT_STATUS_NUMBER := 0;
      P_OUT_EXCEP_ERR_MSG := UPPER(SUBSTR(SQLERRM, 12, 255));
      ROLLBACK;
  END SP_SUBMIT_RESCORE_REQUEST;

  PROCEDURE SP_RESET_ITEM_STATE(P_IN_SUBTESTID        IN SUBTEST_DIM.SUBTESTID %TYPE,
                                P_IN_STUDENT_BIO_ID   IN STUDENT_BIO_DIM.STUDENT_BIO_ID%TYPE,
                                P_IN_USERID           RESCORE_REQUEST_FORM.REQUESTED_USERID%TYPE,
                                P_IN_REQUESTED_STATUS RESCORE_REQUEST_FORM.IS_REQUESTED%TYPE,
                                P_OUT_STATUS_NUMBER   OUT NUMBER,
                                P_OUT_EXCEP_ERR_MSG   OUT VARCHAR2) IS
  BEGIN
    P_OUT_STATUS_NUMBER := 0;
  
    UPDATE RESCORE_REQUEST_FORM RRF
       SET RRF.IS_REQUESTED      = P_IN_REQUESTED_STATUS,
           RRF.UPDATED_DATE_TIME = SYSDATE,
           RRF.REQUESTED_USERID  = P_IN_USERID
     WHERE RRF.STUDENT_BIO_ID = P_IN_STUDENT_BIO_ID
       AND RRF.SUBTESTID = P_IN_SUBTESTID;
  
    P_OUT_STATUS_NUMBER := 1;
  
    COMMIT;
  EXCEPTION
    WHEN OTHERS THEN
      P_OUT_STATUS_NUMBER := 0;
      P_OUT_EXCEP_ERR_MSG := UPPER(SUBSTR(SQLERRM, 12, 255));
      ROLLBACK;
  END SP_RESET_ITEM_STATE;

END PKG_RESCORE_REQUEST;
/
