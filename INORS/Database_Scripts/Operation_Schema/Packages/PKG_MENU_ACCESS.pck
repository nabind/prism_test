CREATE OR REPLACE PACKAGE PKG_MENU_ACCESS IS

  -- Author  : TCS
  -- Created : 8/20/2014 4:06:11 PM
  -- Purpose : Menu Access

TYPE REF_CURSOR IS REF CURSOR;

PROCEDURE SP_GET_MENU_MAP(
	P_IN_USERID IN USERS.USERID%TYPE,
	P_OUT_REF_CURSOR OUT REF_CURSOR,
	P_OUT_EXCEP_ERR_MSG OUT VARCHAR2
);

PROCEDURE SP_GET_ACTION_MAP(P_IN_USERID         IN USERS.USERID%TYPE,
                            P_IN_CUST_PROD_ID   IN CUST_PRODUCT_LINK.CUST_PROD_ID%TYPE,
                            P_OUT_REF_CURSOR    OUT REF_CURSOR,
                            P_OUT_EXCEP_ERR_MSG OUT VARCHAR2);

END PKG_MENU_ACCESS;
/
CREATE OR REPLACE PACKAGE BODY PKG_MENU_ACCESS IS

-- SP_GET_MENU_MAP
PROCEDURE SP_GET_MENU_MAP(
	P_IN_USERID IN USERS.USERID%TYPE,
	P_OUT_REF_CURSOR OUT REF_CURSOR,
	P_OUT_EXCEP_ERR_MSG OUT VARCHAR2
) IS
BEGIN
  OPEN P_OUT_REF_CURSOR FOR
  
   /*SELECT DISTINCT DM.MENU_NAME,
                 DR.REPORT_NAME KEY,
                 DR.REPORT_FOLDER_URI VALUE,
                 DM.MENU_SEQ,
                 DMRA.REPORT_SEQ
   FROM DASH_MENU_RPT_ACCESS DMRA, DASH_REPORTS DR, DASH_MENUS DM
  WHERE DMRA.DB_MENUID = DM.DB_MENUID
    AND DMRA.DB_REPORTID = DR.DB_REPORTID
    AND DMRA.ROLEID IN (SELECT ROLEID FROM USER_ROLE WHERE USERID = P_IN_USERID)
    AND DMRA.ORG_LEVEL IN
        (SELECT ORG_NODE_LEVEL FROM ORG_USERS WHERE USERID = P_IN_USERID)
    AND DR.ACTIVATION_STATUS = 'AC'
  ORDER BY DM.MENU_SEQ, DMRA.REPORT_SEQ;*/
  
  SELECT DISTINCT DM.MENU_NAME,
                 DR.REPORT_NAME KEY,
                 DR.REPORT_FOLDER_URI VALUE,
                 DM.MENU_SEQ,
                 DMRA.REPORT_SEQ
   FROM DASH_MENU_RPT_ACCESS DMRA, DASH_REPORTS DR, DASH_MENUS DM
  WHERE DMRA.DB_MENUID = DM.DB_MENUID
    AND DMRA.DB_REPORTID = DR.DB_REPORTID 
    AND EXISTS (SELECT 1 FROM USER_ROLE a WHERE a.ROLEID = DMRA.ROLEID 
                         AND a.USERID = P_IN_USERID ) 
     AND EXISTS (SELECT 1 FROM ORG_USERS a WHERE a.ORG_NODE_LEVEL = DMRA.ORG_LEVEL
                         AND a.USERID = P_IN_USERID )     
    AND DR.ACTIVATION_STATUS = 'AC'
  ORDER BY DM.MENU_SEQ, DMRA.REPORT_SEQ;

EXCEPTION
  WHEN OTHERS THEN
  P_OUT_EXCEP_ERR_MSG := UPPER(SUBSTR(SQLERRM,12,255));

END SP_GET_MENU_MAP;


-- SP_GET_ACTION_MAP
PROCEDURE SP_GET_ACTION_MAP(P_IN_USERID         IN USERS.USERID%TYPE,
                            P_IN_CUST_PROD_ID   IN CUST_PRODUCT_LINK.CUST_PROD_ID%TYPE,
                            P_OUT_REF_CURSOR    OUT REF_CURSOR,
                            P_OUT_EXCEP_ERR_MSG OUT VARCHAR2) IS

  V_CUST_PRODID NUMBER := 0;

BEGIN

  IF P_IN_CUST_PROD_ID = 0 THEN
    SELECT CPL.CUST_PROD_ID
      INTO V_CUST_PRODID
      FROM CUST_PRODUCT_LINK CPL, PRODUCT P
     WHERE CPL.PRODUCTID = P.PRODUCTID
       AND P.PRODUCT_SEQ = (SELECT MAX(PRODUCT_SEQ) FROM PRODUCT)
       AND EXISTS (SELECT 1
              FROM USERS
             WHERE USERS.CUSTOMERID = CPL.CUSTOMERID
               AND USERS.USERID = P_IN_USERID);
  ELSE
    V_CUST_PRODID := P_IN_CUST_PROD_ID;
  END IF;

  OPEN P_OUT_REF_CURSOR FOR
  
    SELECT DR.REPORT_NAME, DRA.ACTION_NAME
      FROM DASH_ACTION_ACCESS DAA, DASH_REPORTS DR, DASH_RPT_ACTION DRA
     WHERE DAA.DB_REPORTID = DR.DB_REPORTID
       AND DAA.DB_ACTIONID = DRA.DB_ACTIONID
       AND EXISTS (SELECT 1
              FROM USER_ROLE A
             WHERE A.ROLEID = DAA.ROLEID
               AND A.USERID = P_IN_USERID)
       AND EXISTS (SELECT 1
              FROM ORG_USERS A
             WHERE A.ORG_NODE_LEVEL = DAA.ORG_LEVEL
               AND A.USERID = P_IN_USERID)
       AND DR.ACTIVATION_STATUS = 'AC'
       AND DAA.ACTIVATION_STATUS = 'AC'
       AND DAA.CUST_PROD_ID = V_CUST_PRODID
     GROUP BY DR.REPORT_NAME, DRA.ACTION_NAME
     ORDER BY DR.REPORT_NAME;

EXCEPTION
  WHEN OTHERS THEN
    P_OUT_EXCEP_ERR_MSG := UPPER(SUBSTR(SQLERRM, 12, 255));
  
END SP_GET_ACTION_MAP;

END PKG_MENU_ACCESS;
/
