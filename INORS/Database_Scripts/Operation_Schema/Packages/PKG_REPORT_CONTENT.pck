CREATE OR REPLACE PACKAGE PKG_REPORT_CONTENT AS
PROCEDURE CALL_FUNCTIONS(CUST_ID NUMBER);
FUNCTION GET_CUST_PRODID(CUST_ID NUMBER)
RETURN NUMBER;
FUNCTION GET_SUBTESTID(C_PROD_ID NUMBER)
RETURN NUMBER;
FUNCTION GET_OBJECTIVEID(SUB_ID NUMBER)
RETURN NUMBER;

END PKG_REPORT_CONTENT;
/
CREATE OR REPLACE PACKAGE BODY PKG_REPORT_CONTENT AS

  --procedure to call the functions
  PROCEDURE CALL_FUNCTIONS(CUST_ID NUMBER) AS
  
    V_CUST_P_ID NUMBER;
    V_SUB_P_ID  NUMBER;
    V_OBJECT_ID NUMBER;
  BEGIN
  --function call
    V_CUST_P_ID := GET_CUST_PRODID(CUST_ID);
    V_SUB_P_ID  := GET_SUBTESTID(V_CUST_P_ID);
    V_OBJECT_ID := GET_OBJECTIVEID(V_SUB_P_ID);
    DBMS_OUTPUT.PUT_LINE(V_OBJECT_ID);
  END;

  --this function takes customerid as input & return cust_prod_id & product_name
  FUNCTION GET_CUST_PRODID(CUST_ID NUMBER) RETURN NUMBER IS
    CUST_P_ID NUMBER;
    P_NAME    VARCHAR2(100);
  
    CURSOR GET_CUST_PROD_ID IS
      SELECT CUST_PROD_ID
        FROM CUST_PRODUCT_LINK
       WHERE CUSTOMERID = CUST_ID;
  
    TYPE C_PROD_ID IS TABLE OF GET_CUST_PROD_ID%ROWTYPE;
    V_C_PROD_ID C_PROD_ID;
  
  BEGIN
    OPEN GET_CUST_PROD_ID;
    FETCH GET_CUST_PROD_ID BULK COLLECT
      INTO V_C_PROD_ID;
    CLOSE GET_CUST_PROD_ID;
    FOR I IN 1 .. V_C_PROD_ID.COUNT LOOP
      SELECT CUST.CUST_PROD_ID, P.PRODUCT_NAME
        INTO CUST_P_ID, P_NAME
        FROM CUST_PRODUCT_LINK CUST, PRODUCT P
       WHERE CUST.PRODUCTID = P.PRODUCTID
         AND CUST.CUST_PROD_ID = V_C_PROD_ID(I).CUST_PROD_ID
       ORDER BY P.PRODUCT_SEQ;
      RETURN CUST_P_ID;
      RETURN P_NAME;
    END LOOP;
  END GET_CUST_PRODID; -- end of GET_CUST_PRODID function 

  --this function takes cust_prod_id as input & return subtestid & subtest_name
  FUNCTION GET_SUBTESTID(C_PROD_ID NUMBER) RETURN NUMBER IS
    SUB_ID   NUMBER;
    SUB_NAME VARCHAR2(100);
    CURSOR GET_SUBTEST_ID IS
      SELECT PRODUCTID
        FROM CUST_PRODUCT_LINK
       WHERE CUST_PROD_ID = C_PROD_ID;
    TYPE PROD_ID IS TABLE OF GET_SUBTEST_ID%ROWTYPE;
    V_PROD_ID PROD_ID;
  
  BEGIN
    OPEN GET_SUBTEST_ID;
    FETCH GET_SUBTEST_ID BULK COLLECT
      INTO V_PROD_ID;
    CLOSE GET_SUBTEST_ID;
    FOR I IN 1 .. V_PROD_ID.COUNT LOOP
      SELECT SUBMAP.SUBTESTID, DIM.SUBTEST_NAME
        INTO SUB_ID, SUB_NAME
        FROM CUST_PRODUCT_LINK     CUST,
             ASSESSMENT_DIM        ASSDIM,
             SUBTEST_OBJECTIVE_MAP SUBMAP,
             SUBTEST_DIM           DIM
       WHERE ASSDIM.PRODUCTID = V_PROD_ID(I)
      .PRODUCTID
         AND ASSDIM.ASSESSMENTID = SUBMAP.ASSESSMENTID
         AND SUBMAP.SUBTESTID = DIM.SUBTESTID
         AND ROWNUM = 1
       ORDER BY DIM.SUBTEST_SEQ;
      RETURN SUB_ID;
      RETURN SUB_NAME;
    END LOOP;
  END GET_SUBTESTID; -- end of GET_SUBTESTID function

  --this function takes subtestid as input * return objective_id & objective_name
  FUNCTION GET_OBJECTIVEID(SUB_ID NUMBER) RETURN NUMBER IS
    OBJECT_ID   NUMBER;
    OBJECT_NAME VARCHAR2(100);
    CURSOR GET_OBJECTIVE_ID IS
      SELECT OBJECTIVEID
        FROM SUBTEST_OBJECTIVE_MAP
       WHERE SUBTESTID = SUB_ID;
  
    TYPE OBJEC_ID IS TABLE OF GET_OBJECTIVE_ID%ROWTYPE;
    V_OBJEC_ID OBJEC_ID;
  
  BEGIN
    OPEN GET_OBJECTIVE_ID;
    FETCH GET_OBJECTIVE_ID BULK COLLECT
      INTO V_OBJEC_ID;
    CLOSE GET_OBJECTIVE_ID;
    FOR I IN 1 .. V_OBJEC_ID.COUNT LOOP
      SELECT SUBMAP.OBJECTIVEID, DIM.OBJECTIVE_NAME
        INTO OBJECT_ID, OBJECT_NAME
        FROM SUBTEST_OBJECTIVE_MAP SUBMAP, OBJECTIVE_DIM DIM
       WHERE SUBMAP.OBJECTIVEID = V_OBJEC_ID(I)
      .OBJECTIVEID
         AND SUBMAP.OBJECTIVEID = DIM.OBJECTIVEID
         AND ROWNUM = 1
       ORDER BY DIM.OBJECTIVE_SEQ;
      RETURN OBJECT_ID;
      RETURN OBJECT_NAME;
    END LOOP;
  END GET_OBJECTIVEID; -- end of GET_OBJECTIVEID function

END PKG_REPORT_CONTENT;
/
