--------------------------------------------------------------

-- Create table
create table ER_STUDENT_SCHED_HISTORY
(
  ER_SS_HISTID               NUMBER not null,
  UUID                       VARCHAR2(16),
  CTB_CUSTOMER_ID            VARCHAR2(10),
  STATE_CODE                 VARCHAR2(16),
  STATENAME                  VARCHAR2(30),
  FIRSTNAME                  VARCHAR2(30),
  MIDDLENAME                 VARCHAR2(30),
  LASTNAME                   VARCHAR2(30),
  DATEOFBIRTH                VARCHAR2(20),
  GENDER                     VARCHAR2(16),
  GOVERNMENTID               VARCHAR2(16),
  GOVERNMENTIDTYPE           VARCHAR2(16),
  ADDRESS1                   VARCHAR2(250),
  ADDRESS2                   VARCHAR2(250),
  CITY                       VARCHAR2(30),
  COUNTY                     VARCHAR2(30),
  STATE                      VARCHAR2(30),
  ZIP                        VARCHAR2(30),
  EMAIL                      VARCHAR2(250),
  ALTERNATEEMAIL             VARCHAR2(250),
  PRIMARYPHONENUMBER         VARCHAR2(16),
  CELLPHONENUMBER            VARCHAR2(16),
  ALTERNATENUMBER            VARCHAR2(16),
  RESOLVED_ETHNICITY_RACE    VARCHAR2(30),
  HOMELANGUAGE               VARCHAR2(60),
  EDUCATIONLEVEL             VARCHAR2(60),
  ATTENDCOLLEGE              VARCHAR2(60),
  CONTACT                    VARCHAR2(16),
  EXAMINEECOUNTYPARISHCODE   VARCHAR2(16),
  REGISTEREDON               VARCHAR2(20),
  REGISTEREDATTESTCENTER     VARCHAR2(60),
  REGISTEREDATTESTCENTERCODE VARCHAR2(16),
  SCHEDULE_ID                VARCHAR2(20),
  DATE_SCHEDULED             VARCHAR2(20),
  TIMEOFDAY                  VARCHAR2(30),
  DATECHECKEDIN              VARCHAR2(20),
  CONTENT_AREA_CODE          VARCHAR2(20),
  CONTENT_TEST_TYPE          VARCHAR2(3),
  CONTENT_TEST_CODE          VARCHAR2(100),
  BARCODE                    VARCHAR2(10),
  FORM                       VARCHAR2(4),
  TASCREADINESS              VARCHAR2(2),
  ECC                        VARCHAR2(16),
  TESTCENTERCODE             VARCHAR2(16),
  TESTCENTERNAME             VARCHAR2(60),
  DATETIMESTAMP              DATE
);
-- Create/Recreate primary, unique and foreign key constraints 
alter table ER_STUDENT_SCHED_HISTORY
  add constraint PK_ER_STUDENT_SCHED_HISTORY primary key (ER_SS_HISTID);
  
ALTER table er_student_sched_history MODIFY CTB_CUSTOMER_ID varchar2(26);
ALTER table er_student_sched_history MODIFY GOVERNMENTID varchar2(50);
ALTER table er_student_sched_history MODIFY GOVERNMENTIDTYPE varchar2(255);
ALTER table er_student_sched_history MODIFY COUNTY varchar2(50);
ALTER table er_student_sched_history MODIFY PRIMARYPHONENUMBER varchar2(30);
ALTER table er_student_sched_history MODIFY ALTERNATENUMBER varchar2(30);
ALTER table er_student_sched_history MODIFY REGISTEREDATTESTCENTER varchar2(100);
ALTER table er_student_sched_history MODIFY REGISTEREDATTESTCENTERCODE varchar2(20);
ALTER table er_student_sched_history MODIFY FIRSTNAME varchar2(32);
ALTER table er_student_sched_history MODIFY MIDDLENAME varchar2(32);
ALTER table er_student_sched_history MODIFY LASTNAME varchar2(32);
alter table er_student_sched_history add (Regst_TC_CountyParishCode varchar2(100),Sched_TC_CountyParishCode varchar2(100)); 

--------------------------------------------------------------

-- Create table
CREATE TABLE ER_EXCEPTION_DATA
(
  ER_EXCDID               NUMBER,
  SOURCE_SYSTEM           VARCHAR2(32),
  ER_UUID                 VARCHAR2(16),
  ER_SS_HISTID            NUMBER,
  TEST_ELEMENT_ID         NUMBER,
  PROCESS_ID              NUMBER,
  CONTENT_CODE            NUMBER,
  STATE_CODE              VARCHAR2(10),
  LAST_NAME               VARCHAR2(32),
  FORM                    VARCHAR2(10),
  BARCODE                 VARCHAR2(26),
  TEST_DATE               DATE,
  DESCRIPTION             VARCHAR2(4000),
  EXCEPTION_CODE          VARCHAR2(10),
  EXCEPTION_STATUS        VARCHAR2(10),
  CREATED_DATE_TIME       DATE,
  UPDATED_DATE_TIME       DATE
);


ALTER TABLE ER_EXCEPTION_DATA
ADD CONSTRAINT PK_ER_EXCEPTION_DATA
PRIMARY KEY (ER_EXCDID);

ALTER TABLE ER_EXCEPTION_DATA
ADD CONSTRAINT FK_ER_EXCEPTION_DATA
FOREIGN KEY (ER_SS_HISTID) REFERENCES ER_STUDENT_SCHED_HISTORY(ER_SS_HISTID);
ALTER TABLE ER_EXCEPTION_DATA MODIFY TEST_ELEMENT_ID VARCHAR2(32);

ALTER TABLE ER_EXCEPTION_DATA MODIFY (CONTENT_CODE VARCHAR2(20));

--------------------------------------------------------------

-- Create table
create table ER_STUDENT_DEMO
(
  ER_STUDID                  NUMBER,
  UUID                       VARCHAR2(16),
  STATE_CODE                 VARCHAR2(16),
  STATENAME                  VARCHAR2(30),
  CTB_CUSTOMER_ID            NUMBER,
  FIRSTNAME                  VARCHAR2(30),
  MIDDLENAME                 VARCHAR2(30),
  LASTNAME                   VARCHAR2(30),
  DATEOFBIRTH                DATE,
  GENDER                     VARCHAR2(16),
  GOVERNMENTID               VARCHAR2(16),
  GOVERNMENTIDTYPE           VARCHAR2(16),
  ADDRESS1                   VARCHAR2(250),
  ADDRESS2                   VARCHAR2(250),
  CITY                       VARCHAR2(30),
  COUNTY                     VARCHAR2(30),
  STATE                      VARCHAR2(30),
  ZIP                        VARCHAR2(30),
  EMAIL                      VARCHAR2(250),
  ALTERNATEEMAIL             VARCHAR2(250),
  PRIMARYPHONENUMBER         VARCHAR2(16),
  CELLPHONENUMBER            VARCHAR2(16),
  ALTERNATENUMBER            VARCHAR2(16),
  RESOLVED_ETHNICITY_RACE    VARCHAR2(30),
  HOMELANGUAGE               VARCHAR2(60),
  EDUCATIONLEVEL             VARCHAR2(60),
  ATTENDCOLLEGE              VARCHAR2(60),
  CONTACT                    VARCHAR2(16),
  EXAMINEECOUNTYPARISHCODE   VARCHAR2(16),
  REGISTEREDON               DATE,
  REGISTEREDATTESTCENTER     VARCHAR2(60),
  REGISTEREDATTESTCENTERCODE VARCHAR2(16),
  CREATED_DATE_TIME          DATE,
  UPDATED_DATE_TIME          DATE
);

ALTER TABLE ER_STUDENT_DEMO
ADD CONSTRAINT PK_ER_STUDENT_DEMO
PRIMARY KEY (ER_STUDID);

create unique index IDX_ER_STUDENT_DEMO1
ON ER_STUDENT_DEMO(UUID,STATE_CODE);

ALTER table er_student_demo MODIFY FIRSTNAME varchar2(32);
ALTER table er_student_demo MODIFY MIDDLENAME varchar2(32);
ALTER table er_student_demo MODIFY LASTNAME varchar2(32);
ALTER table er_student_demo MODIFY COUNTY varchar2(50);
ALTER table er_student_demo MODIFY PRIMARYPHONENUMBER varchar2(30);
ALTER table er_student_demo MODIFY CELLPHONENUMBER varchar2(30);
ALTER table er_student_demo MODIFY ALTERNATENUMBER varchar2(30);
ALTER table er_student_demo MODIFY REGISTEREDATTESTCENTER varchar2(100);
ALTER table er_student_demo MODIFY REGISTEREDATTESTCENTERCODE varchar2(20);
ALTER table er_student_demo MODIFY GOVERNMENTID varchar2(50);
ALTER table er_student_demo MODIFY GOVERNMENTIDTYPE varchar2(255);
alter table er_student_demo add (Regst_TC_CountyParishCode varchar2(100));   

--------------------------------------------------------------

-- Create table
create table ER_TEST_SCHEDULE
(
  ER_TEST_SCHEDID            NUMBER,
  ER_STUDID                  NUMBER,
  SCHEDULE_ID                NUMBER,
  DATE_SCHEDULED             DATE,
  TIMEOFDAY                  VARCHAR2(30),
  DATECHECKEDIN              DATE,
  CONTENT_AREA_CODE          NUMBER,
  CONTENT_TEST_CODE          NUMBER,
  CONTENT_TEST_TYPE          VARCHAR2(3),
  PP_OAS_LINKEDID            NUMBER,
  BARCODE                    VARCHAR2(10),
  FORM                       VARCHAR2(4),
  TASCREADINESS              VARCHAR2(2),
  ECC                        VARCHAR2(16),
  TESTCENTERCODE             VARCHAR2(16),
  TESTCENTERNAME             VARCHAR2(60),
  CREATED_DATE_TIME          DATE,
  UPDATED_DATE_TIME          DATE
);

ALTER TABLE ER_TEST_SCHEDULE
ADD CONSTRAINT PK_ER_TEST_SCHEDULE
PRIMARY KEY (ER_TEST_SCHEDID);

ALTER TABLE ER_TEST_SCHEDULE
ADD CONSTRAINT FK_ER_TEST_SCHEDULE
FOREIGN KEY (ER_STUDID) REFERENCES ER_STUDENT_DEMO(ER_STUDID);

ALTER TABLE ER_TEST_SCHEDULE MODIFY BARCODE VARCHAR2(26);
alter table ER_TEST_SCHEDULE add (Sched_TC_CountyParishCode varchar2(100));

/*create unique index IDX_ER_TEST_SCHEDULE1
ON ER_TEST_SCHEDULE(SCHEDULE_ID,CONTENT_AREA_CODE,CONTENT_TEST_CODE);
*/
create unique index IDX_ER_TEST_SCHEDULE1 
on ER_TEST_SCHEDULE (ER_STUDID, CONTENT_AREA_CODE, CONTENT_TEST_CODE);




--------------------------------------------------------------



-- ADD 50 OAS and One Exception partition to job_partition_status table.

--select * from job_partition_status;

alter table JOB_PARTITION_STATUS
  drop constraint CHK_JOB_PARTITION_STATUS_1;

alter table JOB_PARTITION_STATUS
  add constraint CHK_JOB_PARTITION_STATUS_1
  check (LOAD_MODE IN ('OAS','PP','NOMODE','EXCEPTION'));

 
---------------------------------------------------------------

--HIST Tables

create table ITEM_SCORE_FACT_HIST
(
  ITEM_FACTID    NUMBER,
  ORG_NODEID     NUMBER,
  CUST_PROD_ID   NUMBER,
  ASSESSMENTID   NUMBER,
  STUDENT_BIO_ID NUMBER,
  CONTENTID      NUMBER,
  SUBTESTID      NUMBER,
  OBJECTIVEID    NUMBER,
  GRADEID        NUMBER,
  LEVELID        NUMBER,
  FORMID         NUMBER,
  ADMINID        NUMBER,
  ITEMSETID      NUMBER,
  READID         NUMBER,
  SCORE_VALUES   VARCHAR2(200),
  PROCESS_ID     NUMBER,
  FLAG           VARCHAR2(1),
  DATETIMESTAMP  DATE default SYSDATE
);


--------------

create table OBJECTIVE_SCORE_FACT_HIST
(
  OBJECTIVE_FACTID NUMBER,
  ORG_NODEID       NUMBER,
  CUST_PROD_ID     NUMBER,
  ASSESSMENTID     NUMBER ,
  STUDENT_BIO_ID   NUMBER ,
  CONTENTID        NUMBER ,
  SUBTESTID        NUMBER ,
  OBJECTIVEID      NUMBER ,
  GENDERID         NUMBER ,
  GRADEID          NUMBER ,
  LEVELID          NUMBER ,
  FORMID           NUMBER ,
  ADMINID          NUMBER ,
  NCR              NUMBER,
  OS               VARCHAR2(5),
  OPI              NUMBER,
  OPIQ             NUMBER,
  OPIP             NUMBER,
  PC               NUMBER,
  PP               NUMBER,
  SS               NUMBER,
  PL               VARCHAR2(1),
  INRC             VARCHAR2(1),
  CONDCODE_ID      NUMBER,
  TEST_DATE        DATE,
  PROCESS_ID       NUMBER,
  FLAG           VARCHAR2(1),
  DATETIMESTAMP    DATE default SYSDATE 
);

ALTER TABLE OBJECTIVE_SCORE_FACT_HIST MODIFY OPI VARCHAR2(5); 
---------------

create table SUBTEST_SCORE_FACT_HIST
(
  SUBTEST_FACTID NUMBER not null,
  ORG_NODEID     NUMBER,
  CUST_PROD_ID   NUMBER not null,
  ASSESSMENTID   NUMBER not null,
  STUDENT_BIO_ID NUMBER not null,
  CONTENTID      NUMBER not null,
  SUBTESTID      NUMBER not null,
  GENDERID       NUMBER not null,
  GRADEID        NUMBER not null,
  LEVELID        NUMBER not null,
  FORMID         NUMBER not null,
  ADMINID        NUMBER not null,
  AAGE           VARCHAR2(5),
  AANCE          NUMBER,
  AANP           NUMBER,
  AANS           NUMBER,
  AASS           NUMBER,
  ACSIP          NUMBER,
  ACSIS          NUMBER,
  ACSIN          NUMBER,
  CSI            NUMBER,
  CSIL           NUMBER,
  CSIU           NUMBER,
  DIFF           VARCHAR2(5),
  GE             VARCHAR2(5),
  HSE            VARCHAR2(1),
  LEX            NUMBER,
  LEXL           NUMBER,
  LEXU           NUMBER,
  NCE            NUMBER,
  NCR            NUMBER,
  NP             NUMBER,
  NPA            NUMBER,
  NPG            NUMBER,
  NPL            NUMBER,
  NPH            NUMBER,
  NS             NUMBER,
  NSA            NUMBER,
  NSG            NUMBER,
  OM             VARCHAR2(5),
  OMS            NUMBER,
  OP             NUMBER,
  OPM            NUMBER,
  PC             NUMBER,
  PL             NUMBER,
  PP             NUMBER,
  PR             NUMBER,
  SEM            NUMBER,
  SNPC           NUMBER,
  SS             NUMBER,
  QTL            NUMBER,
  QTLL           NUMBER,
  QTLU           NUMBER,
  STATUS_CODE    VARCHAR2(3),
  TEST_DATE      DATE,
  PROCESS_ID     NUMBER,
  FLAG           VARCHAR2(1),
  DATETIMESTAMP  DATE default SYSDATE
);  

 
--------------------

create table STU_SUBTEST_DEMO_VALUES_HIST
(
  STU_TST_DEMO_VALID NUMBER ,
  STUDENT_BIO_ID     NUMBER ,
  SUBTESTID          NUMBER ,
  DEMOID             NUMBER ,
  DEMO_VALID         NUMBER ,
  DEMO_VALUE VARCHAR2(32),
  DATE_TEST_TAKEN    DATE ,
  PROCESS_ID NUMBER,
  FLAG           VARCHAR2(1),
  DATETIMESTAMP      DATE default SYSDATE 
);

------------------------------

create table STUDENT_DEMO_VALUES_HIST
(
  STU_DEMO_VALID NUMBER,
  STUDENT_BIO_ID NUMBER,
  DEMOID         NUMBER,
  DEMO_VALID     NUMBER,
  DEMO_VALUE     VARCHAR2(32),
  PROCESS_ID NUMBER,
  FLAG           VARCHAR2(1),
  DATETIMESTAMP  DATE default SYSDATE
);
  
---------------------------
  
create table STUDENT_BIO_DIM_HIST
(
  STUDENT_BIO_ID     NUMBER ,
  FIRST_NAME         VARCHAR2(32),
  MIDDLE_NAME        VARCHAR2(32),
  LAST_NAME          VARCHAR2(32),
  BIRTHDATE          VARCHAR2(10),
  TEST_ELEMENT_ID    NUMBER ,
  INT_STUDENT_ID     VARCHAR2(26),
  EXT_STUDENT_ID     VARCHAR2(20),
  LITHOCODE          VARCHAR2(26),
  GENDERID           NUMBER,
  GRADEID            NUMBER,
  EDU_CENTERID       NUMBER,
  BARCODE            VARCHAR2(26),
  SPECIAL_CODES      VARCHAR2(26),
  STUDENT_MODE       VARCHAR2(2) ,
  ORG_NODEID         NUMBER ,
  CUSTOMERID         NUMBER ,
  ADMINID            NUMBER ,
  IS_BIO_UPDATE_CMPL VARCHAR2(1) ,
  PROCESS_ID NUMBER,
  FLAG           VARCHAR2(1),
  DATETIMESTAMP  DATE default SYSDATE
);

ALTER TABLE STUDENT_BIO_DIM_HIST MODIFY TEST_ELEMENT_ID VARCHAR2(32);

----------------------------------------------------------------------------------------
--ADD COLUMN IN STG TABLES
ALTER TABLE STG_STD_BIO_DETAILS ADD ER_STUDID NUMBER;
ALTER TABLE STG_STD_DEMO_DETAILS ADD ER_STUDID NUMBER;
------
  --------------------------Sequences

create sequence SEQ_ER_STUDENT_SCHED_HISTORY
minvalue 1
maxvalue 9999999999
start with 1
increment by 1
cache 20;
 
create sequence SEQ_ER_EXCEPTION_DATA
minvalue 1
maxvalue 9999999999
start with 1
increment by 1
cache 20;
 
create sequence SEQ_ER_STUDENT_DEMO
minvalue 1
maxvalue 9999999999
start with 1
increment by 1
cache 20;
 
create sequence SEQ_ER_TEST_SCHEDULE
minvalue 1
maxvalue 9999999999
start with 1
increment by 1
cache 20;
  
--ER_EXCEPTION

create table ER_EXCEPTION
(
  EXCP_CODE        NUMBER,
  EXCP_DESCRIPTION VARCHAR2(100),
  EXCP_TYPE        VARCHAR2(10)
);

--STG_PROCESS_STATUS
--SELECT * FROM STG_PROCESS_STATUS;
ALTER TABLE STG_PROCESS_STATUS ADD (ER_VALIDATION VARCHAR2(2),WPN VARCHAR2(100), P_LOG VARCHAR2(4000), DATE1 DATE);
UPDATE STG_PROCESS_STATUS SET WPN = WKF_PARTITION_NAME, P_LOG = PROCESS_LOG, DATE1 = DATETIMESTAMP;
ALTER TABLE STG_PROCESS_STATUS DROP COLUMN WKF_PARTITION_NAME;
ALTER TABLE STG_PROCESS_STATUS DROP COLUMN PROCESS_LOG;
ALTER TABLE STG_PROCESS_STATUS DROP COLUMN DATETIMESTAMP;
ALTER TABLE STG_PROCESS_STATUS RENAME COLUMN WPN TO WKF_PARTITION_NAME;
ALTER TABLE STG_PROCESS_STATUS RENAME COLUMN P_LOG TO PROCESS_LOG;
ALTER TABLE STG_PROCESS_STATUS RENAME COLUMN DATE1 TO DATETIMESTAMP;

ALTER TABLE STG_PROCESS_STATUS
  ADD CONSTRAINT CHK_STG_PROCESS_STATUS_7
  CHECK (ER_VALIDATION IN ('AC','IN','CO','VA','ER'));
  
--ER_STUDENT_SCHED_HISTORY
ALTER TABLE ER_STUDENT_SCHED_HISTORY MODIFY CTB_CUSTOMER_ID VARCHAR2(26); --DEV & QA.

--STG_STD_BIO_DETAILS
CREATE INDEX INDX_STG_STD_BIO_DETAILS_1 ON STG_STD_BIO_DETAILS(TEST_ELEMENT_ID);

-----------------------------------------------------




--STG_HIER_DETAILS
alter table STG_HIER_DETAILS drop constraint PK_STG_HIER_DETAILS; 


PKG_PRF_ORG_USR Package Updated in DEV and QA.

--CREATE FUNCTION FN_GET_ER_EXCDID 
CREATE OR REPLACE FUNCTION FN_GET_ER_EXCDID RETURN NUMBER IS
  ER_EXCDID_VAL NUMBER;
BEGIN
  SELECT SEQ_ER_EXCEPTION_DATA.NEXTVAL INTO ER_EXCDID_VAL FROM DUAL;
  RETURN(ER_EXCDID_VAL);
END FN_GET_ER_EXCDID;
/
CREATE TABLE STG_ER_EXCP_TEMP
(
FILENAME VARCHAR2(256),
PROCESS_ID NUMBER,
SOURCE_SYSTEM VARCHAR2(10),
STATE_CODE VARCHAR2(10),
STUDENT_ID VARCHAR2(32),
TEST_ELEMENT_ID VARCHAR2(32),
BARCODE VARCHAR2(32),
LASTNAME VARCHAR2(32),
CONTENT_CODE NUMBER,
ERROR_CODE VARCHAR2(512),
PROCESS_DATE DATE
);

/*
-----HIERARCHY WKF TABLES NEEDED------

create table ORG_NODE_DIM_BKP
(
  ORG_NODEID         NUMBER not null,
  ORG_NODE_NAME      VARCHAR2(64) not null,
  ORG_NODE_CODE      VARCHAR2(30) not null,
  ORG_NODE_LEVEL     NUMBER not null,
  STRC_ELEMENT       VARCHAR2(30) not null,
  SPECIAL_CODES      VARCHAR2(100),
  ORG_MODE           VARCHAR2(2) not null,
  PARENT_ORG_NODEID  NUMBER not null,
  ORG_NODE_CODE_PATH VARCHAR2(200),
  EMAILS             VARCHAR2(600),
  CUSTOMERID         NUMBER not null,
  CREATED_DATE_TIME  DATE default SYSDATE not null,
  UPDATED_DATE_TIME  DATE
);
*/

--SELECT * FROM STU_SUBTEST_DEMO_VALUES;
ALTER TABLE STU_SUBTEST_DEMO_VALUES ADD (DEMO_VALUE VARCHAR2(32), DATE1 DATE,DATE2 DATE);
UPDATE STU_SUBTEST_DEMO_VALUES SET DATE1 = DATE_TEST_TAKEN,DATE2=DATETIMESTAMP;
commit;
ALTER TABLE STU_SUBTEST_DEMO_VALUES DROP COLUMN DATE_TEST_TAKEN;
ALTER TABLE STU_SUBTEST_DEMO_VALUES DROP COLUMN DATETIMESTAMP;
ALTER TABLE STU_SUBTEST_DEMO_VALUES RENAME COLUMN DATE1 TO DATE_TEST_TAKEN;
ALTER TABLE STU_SUBTEST_DEMO_VALUES RENAME COLUMN DATE2 TO DATETIMESTAMP;

ALTER TABLE STU_SUBTEST_DEMO_VALUES_HIST ADD (DEMO_VALUE VARCHAR2(32));


alter table stu_subtest_demo_values modify demo_valid null;

--alter table item_score_fact modify score_values varchar2(400); -- IN BOTH ISTEP and TASC
--alter table stg_item_response_details modify score_value varchar2(400); --ONLY IN TASC
alter table item_score_fact_hist modify score_values varchar2(400); --ONLY IN TASC



--APPLIED IN QA
alter table STG_STD_BIO_DETAILS
  DROP constraint PK_STG_STD_BIO_DETAILS;-- primary key (STUDENT_BIO_DETAILS_ID)
  
CREATE UNIQUE INDEX INDX_STG_STD_BIO_DETAILS_2
ON STG_STD_BIO_DETAILS (STUDENT_BIO_DETAILS_ID,WKF_PARTITION_NAME);

ALTER TABLE ER_EXCEPTION_DATA ADD  CONTENT_CODE NUMBER;
ALTER TABLE STG_ER_EXCP_TEMP RENAME COLUMN CONTENT_NAME TO CONTENT_CODE;
ALTER TABLE ER_EXCEPTION_DATA ADD STATE_CODE VARCHAR2(10)
ALTER TABLE ER_EXCEPTION_DATA ADD   LAST_NAME               VARCHAR2(32);
ALTER TABLE ER_EXCEPTION_DATA ADD   FORM                    VARCHAR2(10);
ALTER TABLE ER_EXCEPTION_DATA ADD   BARCODE                 VARCHAR2(26);
ALTER TABLE ER_EXCEPTION_DATA ADD   TEST_DATE               DATE;


--INDEX SCRIPT

create index INDX_STG_STD_BIO_DETAILS2 on STG_STD_BIO_DETAILS(WKF_PARTITION_NAME,TEST_ELEMENT_ID);
create index INDX_STG_STD_SUBTEST_DETAILS on STG_STD_SUBTEST_DETAILS(STUDENT_BIO_DETAILS_ID);
create index INDX_STG_STD_BIO_DETAILS on STG_STD_BIO_DETAILS(STUDENT_BIO_DETAILS_ID);
create index INDX_STG_STD_OBJECTIVE_DETAILS on STG_STD_OBJECTIVE_DETAILS(STUDENT_BIO_DETAILS_ID);
create index INDX_STG_ITEM_RESPONSE_DETAILS on STG_ITEM_RESPONSE_DETAILS(STUDENT_BIO_DETAILS_ID);
create index INDX_STG_STD_DEMO_DETAILS on STG_STD_DEMO_DETAILS(STUDENT_BIO_DETAILS_ID);




-------
CREATE TABLE DEMO_CONFIG
(
  SL_NO             NUMBER,
  DEMO_NAME         VARCHAR2(50) not null,
  DEMO_CODE         VARCHAR2(20) not null PRIMARY KEY,
  DEMO_MODE         VARCHAR2(20) not null,
  SUBTESTID         NUMBER,
  CATEGORY          VARCHAR2(20),
  IS_DEMO_VALUE_AVL VARCHAR2(1) not null,
  DEMO_VALUE_NAME   VARCHAR2(200),
  DEMO_VALUE_CODE   VARCHAR2(200),
  IS_DEFAULT        VARCHAR2(1)
);

ALTER TABLE ER_EXCEPTION_DATA ADD TESTING_SITE_NAME VARCHAR2(50);
ALTER TABLE ER_EXCEPTION_DATA ADD TESTING_SITE_CODE VARCHAR2(50);

/*
ALTER TABLE ER_EXCEPTION_DATA ADD 
(TESTING_SITE_NAME VARCHAR2(50),TESTING_SITE_CODE VARCHAR2(50),DT1 DATE,DT2 DATE);
UPDATE ER_EXCEPTION_DATA SET DT1 = CREATED_DATE_TIME,DT2 = UPDATED_DATE_TIME;
ALTER TABLE ER_EXCEPTION_DATA DROP COLUMN CREATED_DATE_TIME;
ALTER TABLE ER_EXCEPTION_DATA DROP COLUMN UPDATED_DATE_TIME;
ALTER TABLE ER_EXCEPTION_DATA RENAME COLUMN DT1 TO CREATED_DATE_TIME;
ALTER TABLE ER_EXCEPTION_DATA RENAME COLUMN DT2 TO UPDATED_DATE_TIME;
*/

ALTER TABLE ER_EXCEPTION_DATA MODIFY TESTING_SITE_NAME VARCHAR2(64);












  
