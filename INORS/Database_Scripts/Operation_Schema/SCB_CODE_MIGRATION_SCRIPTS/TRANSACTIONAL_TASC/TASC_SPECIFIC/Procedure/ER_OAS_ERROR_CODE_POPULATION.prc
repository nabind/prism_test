CREATE OR REPLACE PROCEDURE ER_OAS_ERROR_CODE_POPULATION(P_PROCESS_ID IN NUMBER) IS

  V_ERROR_CODE      VARCHAR2(100) := NULL;
  V_ERROR_FIELD     VARCHAR2(100) := NULL;
  V_REC_COUNT       NUMBER := 0;
  V_COUNT           NUMBER := 0;
  V_FILENAME        VARCHAR2(100) := NULL;
 

  CURSOR C_STAGING_DATA_OAS IS
    SELECT DISTINCT BIO.TEST_ELEMENT_ID AS TEST_ELEMENT_ID,
                    HIER.ORG_CODE AS STATECODE,
                    BIO.EXT_STUDENT_ID AS EXT_STUDENT_ID,
                    BIO.LAST_NAME AS LAST_NAME,
                    TO_NUMBER(TRIM(EXCP.CONTENT_CODE)) AS CONTENTAREA,
                    TO_CHAR(SUB.DATE_TEST_TAKEN, 'DD-MM-YYYY') AS DATE_TEST_TAKEN,
                    SUB.TEST_FORM AS TEST_FORM,
                    EXCP.ER_EXCDID AS ERR_ID
    
      FROM STG_STD_BIO_DETAILS     BIO,
           STG_STD_SUBTEST_DETAILS SUB,
           STG_HIER_DETAILS        HIER,
           SUBTEST_DIM             DIM,
           ER_EXCEPTION_DATA       EXCP
     WHERE BIO.STUDENT_BIO_DETAILS_ID = SUB.STUDENT_BIO_DETAILS_ID
       AND BIO.PROCESS_ID = SUB.PROCESS_ID
       AND BIO.PROCESS_ID = P_PROCESS_ID
       AND SUB.WKF_PARTITION_NAME = 'ER_EXCP'
       AND HIER.WKF_PARTITION_NAME =
           (SELECT DISTINCT WKF_PARTITION_NAME
              FROM STG_PROCESS_STATUS
             WHERE PROCESS_ID = P_PROCESS_ID)
       AND BIO.PROCESS_ID = HIER.PROCESS_ID
       AND HIER.ORG_LEVEL = 1
       AND SUB.CONTENT_NAME = DIM.SUBTEST_CODE
       AND DIM.SUBTEST_TYPE != 'C'
       AND NVL(SUB.STATUS_CODE, '-999') <> '3'
       AND EXCP.PROCESS_ID = P_PROCESS_ID
       AND BIO.TEST_ELEMENT_ID = EXCP.TEST_ELEMENT_ID
       AND DECODE(EXCP.CONTENT_CODE,
                  NULL,
                  '-999',
                  TO_NUMBER(TRIM(SUB.CONTENT_NAME))) =
           NVL(EXCP.CONTENT_CODE, '-999')
       AND EXCP.EXCEPTION_CODE != '251'
       ORDER BY TEST_ELEMENT_ID,CONTENTAREA,ERR_ID;

BEGIN

  SELECT COUNT(1)
    INTO V_REC_COUNT
    FROM STG_PROCESS_STATUS
   WHERE PROCESS_ID = P_PROCESS_ID
     AND ER_VALIDATION = 'IN';

  IF (V_REC_COUNT > 0) THEN
  
    FOR ERR_REC IN C_STAGING_DATA_OAS LOOP
    
        SELECT COUNT(DEMO.ER_STUDID)
          INTO V_COUNT
          FROM ER_STUDENT_DEMO DEMO, ER_TEST_SCHEDULE TEST
         WHERE DEMO.ER_STUDID = TEST.ER_STUDID
           AND DEMO.STATE_CODE = ERR_REC.STATECODE
           AND DEMO.UUID = ERR_REC.EXT_STUDENT_ID; --STATE_CODE/UUID CHECK
      
        IF (V_COUNT = 0) THEN
          --UUID ERROR_CODE
          V_ERROR_FIELD := 'STATE_CODE/UUID';
          V_ERROR_CODE  := '201';
        ELSE
        
          SELECT COUNT(DEMO.ER_STUDID)
            INTO V_COUNT
            FROM ER_STUDENT_DEMO DEMO, ER_TEST_SCHEDULE TEST
           WHERE DEMO.ER_STUDID = TEST.ER_STUDID
             AND DEMO.STATE_CODE = ERR_REC.STATECODE
             AND DEMO.UUID = ERR_REC.EXT_STUDENT_ID
             AND DEMO.LASTNAME = ERR_REC.LAST_NAME; --LAST_NAME CHECK
        
          IF (V_COUNT = 0) THEN
            --LAST_NAME ERROR_CODE
            V_ERROR_FIELD := 'LAST_NAME';
            V_ERROR_CODE  := '202';
          ELSE
          
            SELECT COUNT(DEMO.ER_STUDID)
              INTO V_COUNT
              FROM ER_STUDENT_DEMO DEMO, ER_TEST_SCHEDULE TEST
             WHERE DEMO.ER_STUDID = TEST.ER_STUDID
               AND DEMO.STATE_CODE = ERR_REC.STATECODE
               AND DEMO.UUID = ERR_REC.EXT_STUDENT_ID
               AND DEMO.LASTNAME = ERR_REC.LAST_NAME
               AND TEST.CONTENT_AREA_CODE = ERR_REC.CONTENTAREA; --CONTENT_AREA_CODE CHECK
          
            IF (V_COUNT = 0) THEN
              --CONTENTAREA ERROR_CODE
              V_ERROR_FIELD := 'CONTENT_AREA_CODE';
              V_ERROR_CODE  := '203';
            ELSE
            
              SELECT COUNT(DEMO.ER_STUDID)
                INTO V_COUNT
                FROM ER_STUDENT_DEMO DEMO, ER_TEST_SCHEDULE TEST
               WHERE DEMO.ER_STUDID = TEST.ER_STUDID
                 AND DEMO.STATE_CODE = ERR_REC.STATECODE
                 AND DEMO.UUID = ERR_REC.EXT_STUDENT_ID
                 AND DEMO.LASTNAME = ERR_REC.LAST_NAME
                 AND TEST.CONTENT_AREA_CODE = ERR_REC.CONTENTAREA
                 AND TO_CHAR(TEST.DATE_SCHEDULED, 'DD-MM-YYYY') =
                     ERR_REC.DATE_TEST_TAKEN; --DATE_TEST_TAKEN CHECK
            
              IF (V_COUNT = 0) THEN
                --DATE_TEST_TAKEN ERROR_CODE
                V_ERROR_FIELD := 'DATE_TEST_TAKEN';
                V_ERROR_CODE  := '205';
              ELSE
              
                SELECT COUNT(DEMO.ER_STUDID)
                  INTO V_COUNT
                  FROM ER_STUDENT_DEMO DEMO, ER_TEST_SCHEDULE TEST
                 WHERE DEMO.ER_STUDID = TEST.ER_STUDID
                   AND DEMO.STATE_CODE = ERR_REC.STATECODE
                   AND DEMO.UUID = ERR_REC.EXT_STUDENT_ID
                   AND DEMO.LASTNAME = ERR_REC.LAST_NAME
                   AND TEST.CONTENT_AREA_CODE = ERR_REC.CONTENTAREA
                   AND TO_CHAR(TEST.DATE_SCHEDULED, 'DD-MM-YYYY') =
                       ERR_REC.DATE_TEST_TAKEN
                   AND TEST.FORM = ERR_REC.TEST_FORM; --FORM CHECK
              
                IF (V_COUNT = 0) THEN
                  --FORM ERROR_CODE
                  V_ERROR_FIELD := 'FORM';
                  V_ERROR_CODE  := '204';
                END IF;
              END IF;
            END IF;
          END IF;
        END IF;

          
        IF ((ERR_REC.EXT_STUDENT_ID IS NOT NULL OR LENGTH(ERR_REC.EXT_STUDENT_ID) != 0) AND
         (ERR_REC.LAST_NAME IS NOT NULL OR LENGTH(ERR_REC.LAST_NAME) != 0) AND
         (ERR_REC.DATE_TEST_TAKEN IS NOT NULL OR LENGTH(ERR_REC.DATE_TEST_TAKEN) != 0)) THEN
        
          UPDATE ER_EXCEPTION_DATA DATA
             SET DATA.EXCEPTION_CODE = V_ERROR_CODE,
                 DATA.DESCRIPTION    = DATA.DESCRIPTION ||
                                       ' And The Mismatch Field is: ' ||
                                       V_ERROR_FIELD
           WHERE DATA.ER_EXCDID = ERR_REC.ERR_ID;
         
      END IF;
       --POPULATE STG_ER_EXCP_TEMP TABLE
    
      V_FILENAME := 'TASC_OAS_ER_EXCEPTION_' || P_PROCESS_ID || '.CSV';
    
      INSERT INTO STG_ER_EXCP_TEMP
        (FILENAME, PROCESS_ID, SOURCE_SYSTEM, STATE_CODE, STUDENT_ID,
         TEST_ELEMENT_ID, BARCODE, LASTNAME, CONTENT_CODE, ERROR_CODE, PROCESS_DATE)
      VALUES
        (V_FILENAME,
         P_PROCESS_ID,
         'OAS',
         ERR_REC.STATECODE,
         ERR_REC.EXT_STUDENT_ID,
         ERR_REC.TEST_ELEMENT_ID,
         '',
         ERR_REC.LAST_NAME,
         ERR_REC.CONTENTAREA,
         (SELECT DATA.EXCEPTION_CODE
            FROM ER_EXCEPTION_DATA DATA
           WHERE DATA.ER_EXCDID = ERR_REC.ERR_ID),
         SYSDATE);
    END LOOP;
  END IF;
COMMIT;
END ER_OAS_ERROR_CODE_POPULATION;
/
