--STG_PROCESS_STATUS
create table STG_PROCESS_STATUS
(
  PROCESS_ID           NUMBER not null,
  FILE_NAME            VARCHAR2(256),
  SOURCE_SYSTEM        VARCHAR2(100),
  HIER_VALIDATION      VARCHAR2(2),
  BIO_VALIDATION       VARCHAR2(2),
  DEMO_VALIDATION      VARCHAR2(2),
  CONTENT_VALIDATION   VARCHAR2(2),
  OBJECTIVE_VALIDATION VARCHAR2(2),
  ITEM_VALIDATION      VARCHAR2(2),
  WKF_PARTITION_NAME   VARCHAR2(100),
  PROCESS_LOG          VARCHAR2(4000),
  DATETIMESTAMP        DATE default SYSDATE
);
alter table STG_PROCESS_STATUS add constraint PK_STG_PROCESS_STATUS primary key (PROCESS_ID);
alter table STG_PROCESS_STATUS
  add constraint CHK_STG_PROCESS_STATUS_1
  check (HIER_VALIDATION IN ('AC','IN','CO','VA','ER'));
alter table STG_PROCESS_STATUS
  add constraint CHK_STG_PROCESS_STATUS_2
  check (BIO_VALIDATION IN ('AC','IN','CO','VA','ER'));
alter table STG_PROCESS_STATUS
  add constraint CHK_STG_PROCESS_STATUS_3
  check (DEMO_VALIDATION IN ('AC','IN','CO','VA','ER'));
alter table STG_PROCESS_STATUS
  add constraint CHK_STG_PROCESS_STATUS_4
  check (CONTENT_VALIDATION IN ('AC','IN','CO','VA','ER'));
alter table STG_PROCESS_STATUS
  add constraint CHK_STG_PROCESS_STATUS_5
  check (OBJECTIVE_VALIDATION IN ('AC','IN','CO','VA','ER'));
alter table STG_PROCESS_STATUS
  add constraint CHK_STG_PROCESS_STATUS_6
  check (ITEM_VALIDATION IN ('AC','IN','CO','VA','ER'));

/*--STG_DATA_LAYOUT_CONFIG
create table STG_DATA_LAYOUT_CONFIG
(
  SEQ_NO             NUMBER not null,
  COLUMN_NAME        VARCHAR2(200),
  START_POSITION     NUMBER,
  END_POSITION       NUMBER,
  LENGTH             NUMBER,
  CATEGORY           VARCHAR2(32),
  CATEGORY_TYPE      VARCHAR2(32),
  CATEGORY_VALUE     VARCHAR2(32),
  DATA_EXTRACT_BLOCK VARCHAR2(32),
  REPLACE_FLAG       VARCHAR2(10),
  REPLACE_VALUE      VARCHAR2(32),
  IS_BIO_UPDATE      VARCHAR2(10),
  DESCRIPTION        VARCHAR2(4000),
  ACTIVATION_STATUS  VARCHAR2(2) not null,
  DATETIMESTAMP      DATE not null
);

alter table STG_DATA_LAYOUT_CONFIG add constraint PK_STG_DATA_LAYOUT_CONFIG primary key (SEQ_NO);
alter table STG_DATA_LAYOUT_CONFIG add constraint CHK_STG_DATA_LAYOUT_CONFIG_1 check (REPLACE_FLAG IN ('Y','N'));
alter table STG_DATA_LAYOUT_CONFIG add constraint CHK_STG_DATA_LAYOUT_CONFIG_2 check (IS_BIO_UPDATE IN ('Y','N'));
alter table STG_DATA_LAYOUT_CONFIG add constraint CHK_STG_DATA_LAYOUT_CONFIG check (ACTIVATION_STATUS IN ('AC','IN'));*/

/*--STG_ETL_JOBMASTER
create table STG_ETL_JOBMASTER
(
  MAPPING_NAME        VARCHAR2(80),
  SESSION_NAME        VARCHAR2(80),
  WORKFLOW_NAME       VARCHAR2(80),
  REPOSITORY_SERVICE  VARCHAR2(100),
  INTEGRATION_SERVICE VARCHAR2(100),
  DOMAIN_NAME         VARCHAR2(100),
  CREATED_DATE_TIME   DATE,
  UPDATED_DATE_TIME   DATE
);*/

create table STG_HIER_DETAILS
(
  STG_HIERARCHY_DETAILS_ID NUMBER not null,
  ORG_NODE_ID              NUMBER,
  ORG_NAME                 VARCHAR2(100),
  ORG_CODE                 VARCHAR2(100),
  ORG_TYPE                 VARCHAR2(100),
  ORG_LEVEL                NUMBER,
  MAX_HIERARCHY            NUMBER,
  STRC_ELEMENT             VARCHAR2(100),
  SPECIAL_CODES            VARCHAR2(100),
  ORG_MODE                 VARCHAR2(100),
  PARENT_ORG_CODE          VARCHAR2(100),
  ORG_NODE_CODE_PATH       VARCHAR2(200),
  EMAIL                    VARCHAR2(100),
  ADMINID                  NUMBER,
  ORGTP                    VARCHAR2(100),
  CUSTOMER_ID              NUMBER,
  PRODUCT_ID               NUMBER,
  PROCESS_ID               NUMBER,
  WKF_PARTITION_NAME       VARCHAR2(100),
  DATETIMESTAMP            DATE default SYSDATE
);
alter table STG_HIER_DETAILS add constraint PK_STG_HIER_DETAILS primary key (STG_HIERARCHY_DETAILS_ID);
alter table STG_HIER_DETAILS add constraint FK_STG_HIER_DETAILS foreign key (PROCESS_ID) references STG_PROCESS_STATUS (PROCESS_ID);

--STG_HIER_DATA_LAYOUT_CONFIG
create table STG_HIER_DATA_LAYOUT_CONFIG
(
  SEQ_NO            NUMBER not null,
  COLUMN_NAME       VARCHAR2(200),
  START_POSITION    NUMBER,
  END_POSITION      NUMBER,
  LENGTH            NUMBER,
  CATEGORY_TYPE     VARCHAR2(32),
  CATEGORY_VALUE    VARCHAR2(32),
  DESCRIPTION       VARCHAR2(4000),
  ACTIVATION_STATUS VARCHAR2(2) not null,
  DATETIMESTAMP     DATE not null
);

alter table STG_HIER_DATA_LAYOUT_CONFIG add constraint PK_STG_HIER_DATA_LAYOUT_CONFIG primary key (SEQ_NO);
alter table STG_HIER_DATA_LAYOUT_CONFIG add constraint CHK_HIER_DATA_LAYOUT_CONFIG check (ACTIVATION_STATUS IN ('AC','IN'));

--STG_HIER_PROCESS_STATUS
create table STG_HIER_PROCESS_STATUS
(
  PROCESS_ID      NUMBER not null,
  FILE_NAME       VARCHAR2(256),
  HIER_VALIDATION VARCHAR2(2),
  PROCESS_LOG     VARCHAR2(4000),
  DATETIMESTAMP   DATE default SYSDATE
);
alter table STG_HIER_PROCESS_STATUS add constraint PK_STG_HIER_PROCESS_STATUS primary key (PROCESS_ID);
alter table STG_HIER_PROCESS_STATUS add constraint CHK_STG_HIER_PROCESS_STATUS check (HIER_VALIDATION IN ('AC','ER','CO','VA'));

--STG_ITEM_RESPONSE_DETAILS
create table STG_ITEM_RESPONSE_DETAILS
(
  STUDENT_BIO_DETAILS_ID NUMBER,
  CONTENT_CODE           VARCHAR2(100),
  OBJECTIVE_CODE         VARCHAR2(100),
  TEST_FORM              VARCHAR2(100),
  GRADE                  VARCHAR2(100),
  ITEM_TYPE              VARCHAR2(100),
  ITEM_CODE              VARCHAR2(100),
  ITEM_NAME              VARCHAR2(100),
  READ_CODE              VARCHAR2(100),
  SCORE_VALUE            VARCHAR2(100),
  WKF_PARTITION_NAME     VARCHAR2(100),
  PROCESS_ID             NUMBER,
  DATETIMESTAMP          DATE default SYSDATE
);

alter table STG_ITEM_RESPONSE_DETAILS add constraint FK_STG_ITEM_RESPONSE_DETAILS foreign key (PROCESS_ID) references STG_PROCESS_STATUS (PROCESS_ID);
---ALTER ADDED ON 03/27/2015 FROM PERF
ALTER TABLE STG_ITEM_RESPONSE_DETAILS MODIFY SCORE_VALUE VARCHAR2(400);

--STG_LSTNODE_HIER_DETAILS
create table STG_LSTNODE_HIER_DETAILS
(
  STU_LSTNODE_HIER_ID NUMBER,
  ORG_NAME            VARCHAR2(50),
  ORG_CODE            VARCHAR2(50),
  ORG_TYPE            VARCHAR2(50),
  ORG_LEVEL           NUMBER,
  ORG_NODE_ID         NUMBER,
  ORG_NODE_PATH       VARCHAR2(200),
  WKF_PARTITION_NAME  VARCHAR2(100),
  DATETIMESTAMP       DATE default SYSDATE
);

--STG_ORG_LSTNODE_LINK
create table STG_ORG_LSTNODE_LINK
(
  CUSTOMERID             NUMBER, 
  ORG_NODE_LEVEL         NUMBER,
  ORG_NODE_CODE_PATH     VARCHAR2(200),
  LST_ORG_NODE_LEVEL     NUMBER,
  LST_ORG_NODE_CODE_PATH VARCHAR2(200),
  DATETIMESTAMP          DATE default SYSDATE
);

--STG_ORG_NODE_DIM
create table STG_ORG_NODE_DIM
(
  ORG_TP              VARCHAR2(10),
  STG_ORG_NODE_DIM_ID NUMBER not null,
  ORG_NODE_NAME       VARCHAR2(100),
  ORG_NODE_LABEL      VARCHAR2(100),
  ORG_NODE_CODE       VARCHAR2(100),
  ORG_NODE_LEVEL      NUMBER,
  STRC_ELEMENT        VARCHAR2(100),
  SPECIAL_CODES       VARCHAR2(100),
  ORG_MODE            VARCHAR2(100),
  PARENT_ORG_CODE     VARCHAR2(100),
  PARENT_ORG_LEVEL    NUMBER,
  ORG_NODE_CODE_PATH  VARCHAR2(200),
  EMAIL_1             VARCHAR2(100),
  EMAIL_2             VARCHAR2(100),
  EMAIL_3             VARCHAR2(100),
  CUSTOMER_ID         NUMBER,
  PROCESS_ID          NUMBER,
  DATETIMESTAMP       DATE default SYSDATE
);

alter table STG_ORG_NODE_DIM add constraint PK_STG_ORG_NODE_DIM_ID primary key (STG_ORG_NODE_DIM_ID);


--STG_STD_BIO_DETAILS -- DIFF 
create table STG_STD_BIO_DETAILS
(
  STUDENT_BIO_DETAILS_ID NUMBER not null,
  FIRST_NAME             VARCHAR2(100),
  BIOFLAG_FIRST_NAME     VARCHAR2(100),
  MIDDLE_NAME            VARCHAR2(100),
  BIOFLAG_MIDDLE_NAME    VARCHAR2(100),
  LAST_NAME              VARCHAR2(100),
  BIOFLAG_LAST_NAME      VARCHAR2(100),
  BIRTHDATE              VARCHAR2(10),
  BIOFLAG_BIRTHDATE      VARCHAR2(100),
  GENDER                 VARCHAR2(10),
  BIOFLAG_GENDER         VARCHAR2(100),
  GRADE                  VARCHAR2(10),
  BIOFLAG_GRADE          VARCHAR2(100),
  EDU_CENTER             VARCHAR2(100),
  BIOFLAG_EDU_CENTER     VARCHAR2(100),
  BARCODE                VARCHAR2(26),
  BIOFLAG_BARCODE        VARCHAR2(100),
  SPECIAL_CODES          VARCHAR2(100),
  BIOFLAG_SPECIAL_CODES  VARCHAR2(100),
  STUDENT_MODE           VARCHAR2(10),
  STRUC_ELEMENT          NUMBER,
  BIOFLAG_STRUC_ELEMENT  VARCHAR2(100),
  TEST_ELEMENT_ID        VARCHAR2(30), --DIFF DATA TYPE(WAS NUMBER IN TASC)
  INT_STUDENT_ID         VARCHAR2(26),
  BIOFLAG_INT_STUDENT_ID VARCHAR2(100),
  EXT_STUDENT_ID         VARCHAR2(20),
  BIOFLAG_EXT_STUDENT_ID VARCHAR2(100),
  LITHOCODE              VARCHAR2(30),
  BIOFLAG_LITHOCODE      VARCHAR2(100),
  STU_LSTNODE_HIER_ID    NUMBER,
  IS_BIO_UPDATE_CMPL     VARCHAR2(2),
  PROCESS_ID             NUMBER,
  NEED_PRISM_CONSUME     VARCHAR2(10),
  WKF_PARTITION_NAME     VARCHAR2(100),
  ER_TEST_SCHEDID NUMBER,
  DATETIMESTAMP          DATE default sysdate
);
alter table STG_STD_BIO_DETAILS add constraint PK_STG_STD_BIO_DETAILS primary key (STUDENT_BIO_DETAILS_ID);
alter table STG_STD_BIO_DETAILS add constraint FK_STG_STD_BIO_DETAILS foreign key (PROCESS_ID) references STG_PROCESS_STATUS (PROCESS_ID);

--STG_STD_DEMO_DETAILS
create table STG_STD_DEMO_DETAILS
(
  DEMO_CODE              VARCHAR2(200),
  DEMO_VALUE             VARCHAR2(200),
  STUDENT_BIO_DETAILS_ID NUMBER,
  CONTENT_CODE           VARCHAR2(100),
  NEED_PRISM_CONSUME     VARCHAR2(20),
  PROCESS_ID             NUMBER,
  WKF_PARTITION_NAME     VARCHAR2(100),
  IS_BIO_UPDATE          VARCHAR2(10),
  ER_TEST_SCHEDID NUMBER,
  DATETIMESTAMP          DATE default sysdate
);
alter table STG_STD_DEMO_DETAILS add constraint FK_STG_STD_DEMO_DETAILS_1 foreign key (PROCESS_ID) references STG_PROCESS_STATUS (PROCESS_ID);

--STG_STD_OBJECTIVE_DETAILS
create table STG_STD_OBJECTIVE_DETAILS
(
  STUDENT_BIO_DETAILS_ID NUMBER,
  CONTENT_NAME           VARCHAR2(100),
  TEST_FORM              VARCHAR2(100),
  DATE_TEST_TAKEN        DATE default SYSDATE,
  OBJECTIVE_NAME         VARCHAR2(100),
  COND_CODE              VARCHAR2(100),
  NCR                    NUMBER,
  OS                     VARCHAR2(5),
  OPI                    VARCHAR2(5),
  OPIQ                   NUMBER,
  OPIP                   NUMBER,
  PC                     NUMBER,
  PP                     NUMBER,
  PL                     VARCHAR2(100),
  SS                     NUMBER,
  INRC                   VARCHAR2(100),
  OBJECTIVE_SS_RANGE     VARCHAR2(100),
  PROCESS_ID             NUMBER,
  WKF_PARTITION_NAME     VARCHAR2(100),
  DATETIMESTAMP          DATE default sysdate
);
alter table STG_STD_OBJECTIVE_DETAILS add constraint FK_STG_STD_OBJECTIVE_DETAILS foreign key (PROCESS_ID) references STG_PROCESS_STATUS (PROCESS_ID);

--STG_STD_SUBTEST_DETAILS
create table STG_STD_SUBTEST_DETAILS
(
  STUDENT_BIO_DETAILS_ID NUMBER,
  STATUS_CODE            VARCHAR2(20),
  CONTENT_NAME           VARCHAR2(100),
  SCORING_STATUS         VARCHAR2(100),
  TEST_FORM              VARCHAR2(100),
  DATE_TEST_TAKEN        DATE default SYSDATE,
  AAGE                   VARCHAR2(5),
  AANCE                  NUMBER,
  AANP                   NUMBER,
  AANS                   NUMBER,
  AASS                   NUMBER,
  ACSIP                  NUMBER,
  ACSIS                  NUMBER,
  ACSIN                  NUMBER,
  CSI                    NUMBER,
  CSIL                   NUMBER,
  CSIU                   NUMBER,
  DIFF                   VARCHAR2(5),
  GE                     VARCHAR2(5),
  HSE                    VARCHAR2(1),
  LEX                    NUMBER,
  LEXL                   NUMBER,
  LEXU                   NUMBER,
  NCE                    NUMBER,
  NCR                    NUMBER,
  NP                     NUMBER,
  NPA                    NUMBER,
  NPG                    NUMBER,
  NPL                    NUMBER,
  NPH                    NUMBER,
  NS                     NUMBER,
  NSA                    NUMBER,
  NSG                    NUMBER,
  OM                     VARCHAR2(5),
  OMS                    NUMBER,
  OP                     NUMBER,
  OPM                    NUMBER,
  PC                     NUMBER,
  PL                     VARCHAR2(100),
  PP                     NUMBER,
  PR                     NUMBER,
  SEM                    NUMBER,
  SNPC                   NUMBER,
  SS                     NUMBER,
  QTL                    NUMBER,
  QTLL                   NUMBER,
  QTLU                   NUMBER,
  SUBTEST_SS_RANGE       VARCHAR2(100),
  PROCESS_ID             NUMBER,
  NEED_PRISM_CONSUME     VARCHAR2(20),
  WKF_PARTITION_NAME     VARCHAR2(100),
  DATETIMESTAMP          DATE default SYSDATE
);
alter table STG_STD_SUBTEST_DETAILS add constraint FK_STG_STD_SUBTEST_DETAILS_1 foreign key (PROCESS_ID) references STG_PROCESS_STATUS (PROCESS_ID);

--STG_TASC_HIER_EXTRACT
create table STG_TASC_HIER_EXTRACT
(
  HIER_EXTRACT_ID            NUMBER not null,
  ORG_TP                     VARCHAR2(10),
  ELEMENT_A_HIERARCHY_NAME   VARCHAR2(30),
  ELEMENT_A_HIERARCHY_LABEL  VARCHAR2(20),
  ELEMENT_A_STRUCTURE_LEVEL  VARCHAR2(2),
  ELEMENT_A_ELEMENT_NUMBER   VARCHAR2(7),
  ELEMENT_A_SPECIAL_CODES    VARCHAR2(26),
  ELEMENT_A_EMAIL_ADDRESS_1  VARCHAR2(70),
  ELEMENT_A_EMAIL_ADDRESS_2  VARCHAR2(70),
  ELEMENT_A_EMAIL_ADDRESS_3  VARCHAR2(70),
  ELEMENT_A_PARENT_ORG_LEVEL VARCHAR2(2),
  ELEMENT_A_PARENT_ORG_CODE  VARCHAR2(26),
  ELEMENT_A_CODE_PATH        VARCHAR2(200),
  ELEMENT_B_HIERARCHY_NAME   VARCHAR2(30),
  ELEMENT_B_HIERARCHY_LABEL  VARCHAR2(20),
  ELEMENT_B_STRUCTURE_LEVEL  VARCHAR2(2),
  ELEMENT_B_ELEMENT_NUMBER   VARCHAR2(7),
  ELEMENT_B_SPECIAL_CODES    VARCHAR2(26),
  ELEMENT_B_EMAIL_ADDRESS_1  VARCHAR2(70),
  ELEMENT_B_EMAIL_ADDRESS_2  VARCHAR2(70),
  ELEMENT_B_EMAIL_ADDRESS_3  VARCHAR2(70),
  ELEMENT_B_PARENT_ORG_LEVEL VARCHAR2(2),
  ELEMENT_B_PARENT_ORG_CODE  VARCHAR2(26),
  ELEMENT_B_CODE_PATH        VARCHAR2(200),
  ELEMENT_C_HIERARCHY_NAME   VARCHAR2(30),
  ELEMENT_C_HIERARCHY_LABEL  VARCHAR2(20),
  ELEMENT_C_STRUCTURE_LEVEL  VARCHAR2(2),
  ELEMENT_C_ELEMENT_NUMBER   VARCHAR2(7),
  ELEMENT_C_SPECIAL_CODES    VARCHAR2(26),
  ELEMENT_C_EMAIL_ADDRESS_1  VARCHAR2(70),
  ELEMENT_C_EMAIL_ADDRESS_2  VARCHAR2(70),
  ELEMENT_C_EMAIL_ADDRESS_3  VARCHAR2(70),
  ELEMENT_C_PARENT_ORG_LEVEL VARCHAR2(2),
  ELEMENT_C_PARENT_ORG_CODE  VARCHAR2(26),
  ELEMENT_C_CODE_PATH        VARCHAR2(200),
  ELEMENT_D_HIERARCHY_NAME   VARCHAR2(30),
  ELEMENT_D_HIERARCHY_LABEL  VARCHAR2(20),
  ELEMENT_D_STRUCTURE_LEVEL  VARCHAR2(2),
  ELEMENT_D_ELEMENT_NUMBER   VARCHAR2(7),
  ELEMENT_D_SPECIAL_CODES    VARCHAR2(26),
  ELEMENT_D_EMAIL_ADDRESS_1  VARCHAR2(70),
  ELEMENT_D_EMAIL_ADDRESS_2  VARCHAR2(70),
  ELEMENT_D_EMAIL_ADDRESS_3  VARCHAR2(70),
  ELEMENT_D_PARENT_ORG_LEVEL VARCHAR2(2),
  ELEMENT_D_PARENT_ORG_CODE  VARCHAR2(26),
  ELEMENT_D_CODE_PATH        VARCHAR2(200),
  ELEMENT_E_HIERARCHY_NAME   VARCHAR2(30),
  ELEMENT_E_HIERARCHY_LABEL  VARCHAR2(20),
  ELEMENT_E_STRUCTURE_LEVEL  VARCHAR2(2),
  ELEMENT_E_ELEMENT_NUMBER   VARCHAR2(7),
  ELEMENT_E_SPECIAL_CODES    VARCHAR2(26),
  ELEMENT_E_EMAIL_ADDRESS_1  VARCHAR2(70),
  ELEMENT_E_EMAIL_ADDRESS_2  VARCHAR2(70),
  ELEMENT_E_EMAIL_ADDRESS_3  VARCHAR2(70),
  ELEMENT_E_PARENT_ORG_LEVEL VARCHAR2(2),
  ELEMENT_E_PARENT_ORG_CODE  VARCHAR2(26),
  ELEMENT_E_CODE_PATH        VARCHAR2(200),
  ELEMENT_F_HIERARCHY_NAME   VARCHAR2(30),
  ELEMENT_F_HIERARCHY_LABEL  VARCHAR2(20),
  ELEMENT_F_STRUCTURE_LEVEL  VARCHAR2(2),
  ELEMENT_F_ELEMENT_NUMBER   VARCHAR2(7),
  ELEMENT_F_SPECIAL_CODES    VARCHAR2(26),
  ELEMENT_F_EMAIL_ADDRESS_1  VARCHAR2(70),
  ELEMENT_F_EMAIL_ADDRESS_2  VARCHAR2(70),
  ELEMENT_F_EMAIL_ADDRESS_3  VARCHAR2(70),
  ELEMENT_F_PARENT_ORG_LEVEL VARCHAR2(2),
  ELEMENT_F_PARENT_ORG_CODE  VARCHAR2(26),
  ELEMENT_F_CODE_PATH        VARCHAR2(200),
  ELEMENT_G_HIERARCHY_NAME   VARCHAR2(30),
  ELEMENT_G_HIERARCHY_LABEL  VARCHAR2(20),
  ELEMENT_G_STRUCTURE_LEVEL  VARCHAR2(2),
  ELEMENT_G_ELEMENT_NUMBER   VARCHAR2(7),
  ELEMENT_G_SPECIAL_CODES    VARCHAR2(26),
  ELEMENT_G_EMAIL_ADDRESS_1  VARCHAR2(70),
  ELEMENT_G_EMAIL_ADDRESS_2  VARCHAR2(70),
  ELEMENT_G_EMAIL_ADDRESS_3  VARCHAR2(70),
  ELEMENT_G_PARENT_ORG_LEVEL VARCHAR2(2),
  ELEMENT_G_PARENT_ORG_CODE  VARCHAR2(26),
  ELEMENT_G_CODE_PATH        VARCHAR2(200),
  PROCESS_ID                 NUMBER,
  ELEMENT_A_ORG_NODE_CODE    VARCHAR2(26),
  ELEMENT_B_ORG_NODE_CODE    VARCHAR2(26),
  ELEMENT_C_ORG_NODE_CODE    VARCHAR2(26),
  ELEMENT_D_ORG_NODE_CODE    VARCHAR2(26),
  ELEMENT_E_ORG_NODE_CODE    VARCHAR2(26),
  ELEMENT_F_ORG_NODE_CODE    VARCHAR2(26),
  ELEMENT_G_ORG_NODE_CODE    VARCHAR2(26)
);

alter table STG_TASC_HIER_EXTRACT add constraint PK_HIER_EXTRACT_ID primary key (HIER_EXTRACT_ID);

--ORG_USER_MAP_TEMP
create global temporary table ORG_USER_MAP_TEMP
(
  USERID       NUMBER,
  ORG_NODEID   NUMBER,
  CUSTOMERID   NUMBER,
  TRIGGER_TYPE VARCHAR2(20)
)
on commit delete rows;

create table ORG_NODE_DIM_BKP
(
  ORG_NODEID         NUMBER not null,
  ORG_NODE_NAME      VARCHAR2(64) not null,
  ORG_NODE_CODE      VARCHAR2(30) not null,
  ORG_NODE_LEVEL     NUMBER not null,
  STRC_ELEMENT       VARCHAR2(30) not null,
  SPECIAL_CODES      VARCHAR2(100),
  ORG_MODE           VARCHAR2(2) not null,
  PARENT_ORG_NODEID  NUMBER not null,
  ORG_NODE_CODE_PATH VARCHAR2(200),
  EMAILS             VARCHAR2(600),
  CUSTOMERID         NUMBER not null,
  CREATED_DATE_TIME  DATE default SYSDATE not null,
  UPDATED_DATE_TIME  DATE
);
